{"meta":{"title":"Iamfree Blog","subtitle":"十年寒窗如一日，一举成名天下知","description":"一个有梦想的技术热爱狂","author":"Iamfree","url":"127.0.0.1"},"pages":[{"title":"","date":"2018-05-22T19:42:20.379Z","updated":"2018-05-22T19:42:20.379Z","comments":true,"path":"404.html","permalink":"127.0.0.1/404.html","excerpt":"","text":"404 *{margin:0;padding:0;outline:none;font-family:\\5FAE\\8F6F\\96C5\\9ED1,宋体;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;-khtml-user-select:none;user-select:none;cursor:default;font-weight:lighter;} .center{margin:0 auto;} .whole{width:100%;height:100%;line-height:100%;position:fixed;bottom:0;left:0;z-index:-1000;overflow:hidden;} .whole img{width:100%;height:100%;} .mask{width:100%;height:100%;position:absolute;top:0;left:0;background:#000;opacity:0.6;filter:alpha(opacity=60);} .b{width:100%;text-align:center;height:400px;position:absolute;top:50%;margin-top:-230px}.a{width:150px;height:50px;margin-top:30px}.a a{display:block;float:left;width:150px;height:50px;background:#fff;text-align:center;line-height:50px;font-size:18px;border-radius:25px;color:#333}.a a:hover{color:#000;box-shadow:#fff 0 0 20px} p{color:#fff;margin-top:40px;font-size:24px;} #num{margin:0 5px;font-weight:bold;} var num=4; function redirect(){ num--; document.getElementById(\"num\").innerHTML=num; if(num"},{"title":"","date":"2018-05-22T20:32:27.432Z","updated":"2018-05-22T20:32:27.432Z","comments":true,"path":"about/index.html","permalink":"127.0.0.1/about/index.html","excerpt":"","text":"关于 *{ font-family:Consolas; } about me Author:Iamfree 前方的路很远，也很美~ 很高兴你们来到我的博客，一个真正可以用来学习的博客，虽然说我能力还不是很够，但是我会努力的去学习~ 目前是一位初中生，因为某些原因爱上了这行业，同时认识了很多大佬，他们也愿意和我交朋友，这使我在成长的路上有着不小的帮助。 目前还是一位菜鸟，但是梦想很XX，所以我要尽一切的可能去实现它~ 咳咳~扯B结束了 这个博客主要就是为了记录一些自己在学习过程中遇到的问题和解决思路，也会分享一下自己在学习时的一些问题。 Fs Ctf团队是我和几个朋友一起创建的，目的是为了共同学习，以后有机会一起参加CTF大赛，获得自己付出应得的回报，如果您有一颗学习的心，欢迎加入我们，但是要懂得低调，因为低调的人活的久。"},{"title":"分类","date":"2018-05-23T08:26:06.000Z","updated":"2018-05-23T08:26:30.304Z","comments":true,"path":"categories/index.html","permalink":"127.0.0.1/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2018-05-23T08:23:08.000Z","updated":"2018-05-23T08:26:38.303Z","comments":true,"path":"tags/index.html","permalink":"127.0.0.1/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Python","slug":"Python","date":"2018-05-23T10:03:36.000Z","updated":"2018-05-23T10:16:53.357Z","comments":true,"path":"2018/05/23/Python/","link":"","permalink":"127.0.0.1/2018/05/23/Python/","excerpt":"","text":"","categories":[{"name":"加密文章","slug":"加密文章","permalink":"127.0.0.1/categories/加密文章/"}],"tags":[]},{"title":"代码审计","slug":"代码审计","date":"2018-05-23T08:48:16.000Z","updated":"2018-05-23T09:38:54.964Z","comments":true,"path":"2018/05/23/代码审计/","link":"","permalink":"127.0.0.1/2018/05/23/代码审计/","excerpt":"","text":"你好 print( &quot;这是测试&quot; ) 12345678910&lt;html&gt; &lt;head&gt; &lt;meta charset=\"utf-8\"&gt; &lt;title&gt;测试&lt;/title&gt; &lt;/head&gt; &lt;div&gt; &lt;h1&gt;你好&lt;/h1&gt; &lt;/div&gt;&lt;/html&gt; 百度","categories":[{"name":"Web攻防","slug":"Web攻防","permalink":"127.0.0.1/categories/Web攻防/"}],"tags":[{"name":"代码审计","slug":"代码审计","permalink":"127.0.0.1/tags/代码审计/"},{"name":"PHP","slug":"PHP","permalink":"127.0.0.1/tags/PHP/"}]},{"title":"xxx存在漏洞","slug":"Pwn安全","date":"2018-05-22T15:59:58.000Z","updated":"2018-05-22T16:12:56.438Z","comments":true,"path":"2018/05/22/Pwn安全/","link":"","permalink":"127.0.0.1/2018/05/22/Pwn安全/","excerpt":"","text":"12345print( 1 )for i in range(10): print(i)","categories":[],"tags":[{"name":"Pwn安全","slug":"Pwn安全","permalink":"127.0.0.1/tags/Pwn安全/"}]},{"title":"test","slug":"test","date":"2018-05-22T15:59:58.000Z","updated":"2018-05-23T07:49:03.396Z","comments":true,"path":"2018/05/22/test/","link":"","permalink":"127.0.0.1/2018/05/22/test/","excerpt":"","text":"项目介绍这是笔者从GITHUB上找的简单PHP程序(用于学习) 这是一个可 增删查 的用户数据管理 数据库连接代码:先介绍一下数据库的表结构： 123456&lt;?php $pdo = new PDO('mysql:host=localhost;dbname=data','root','root'); //PDO(PHP访问数据库定义了一个轻量级的、一致性的接口，它提供了一个数据访问抽象层，这样，无论使用什么数据库，都可以通过一致的函数执行查询和获取数据，比如mysql有limit，MSSQL没有limit，pdo会自动转换) $pdo-&gt;exec('set names utf8'); //设置编码 $pdo-&gt;setAttribute(PDO::ATTR_DEFAULT_FETCH_MODE,PDO::FETCH_ASSOC); //设置默认结果集模式为关联数组 $pdo-&gt;setAttribute(PDO::ATTR_ERRMODE,PDO::ERRMODE_EXCEPTION); //修改报错模式?&gt; 其中的PDO是:PDO(PHP访问数据库定义了一个轻量级的、一致性的接口，它提供了一个数据访问抽象层，这样，无论使用什么数据库，都可以通过一致的函数执行查询和获取数据，比如mysql有limit，MSSQL没有limit，pdo会自动转换) PDO好处： 更换数据库时取得极大便利(从A数据库换成其他数据库可以不需要修改查询的代码，因为PDO帮我实现了) 更换数据库时取得极大便利 首页代码：12345678910111213141516171819202122232425&lt;?php include &apos;config.inc.php&apos;; //包含连接数据库的代码 $len = 10; //每页展现10条数据 $page = !empty($_GET[&quot;page&quot;]) ? $_GET[&quot;page&quot;] : 1;//三元表达式，表示如果$_GET[&apos;page&apos;]为空时，默认值为1 $sqlTotal = &quot;select count(Id) from t1&quot;; // SQL语句。意思是查询t1表中的Id字段个数 $smtTotal = $pdo-&gt;prepare($sqlTotal); //准备要执行的SQL语句并返回一个 PDOStatement 对象(PHP 5 &gt;= 5.1.0, PECL pdo &gt;= 0.1.0) echo &quot;&lt;strong&gt;\\$sqlTotal:&lt;/strong&gt;&quot;; print_r($smtTotal); echo &quot;&lt;br /&gt;&quot;; echo &quot;&lt;strong&gt;execute():&lt;/strong&gt;&quot;; print_r($smtTotal-&gt;execute()); $tot = $smtTotal-&gt;fetchColumn(); //总记录数 echo &quot;&lt;br /&gt;&quot;; echo &quot;&lt;strong&gt;\\$tot:&lt;/strong&gt;&quot;; print_r($tot); echo &quot;&lt;br /&gt;&quot;; $pages = ceil($tot/$len); //总页数 echo &quot;&lt;strong&gt;\\$pages:&lt;/strong&gt;&quot;; print_r($pages); ... ...(省略，先讲解一下这段代码的用法) 可以看看我写的PDO的文章(别夸我，谁让我是爱学习的好孩子) 首页的代码我统统写了注释： 更改用户数据代码：1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253&lt;?php/* 思路:先获取对应的数据，然后返回到输入框，如果我们选择提交，表单就会发送的数据就会更改到数据库里，实现更改内容*/ &lt;?phpinclude &apos;config.inc.php&apos;;$Id = $_GET[&quot;Id&quot;]; //获取GET请求过来的Id值$sql = &quot;select * from t1 where Id=?&quot;; //SQL语句的查询$smt = $pdo-&gt;prepare($sql); //给SQL语句做标记$smt-&gt;bindValue(1,$Id); //想成是给上面的?改成$Id变量的值$smt-&gt;execute(); //执行SQL语句$row = $smt-&gt;fetch(); //接收SQL语句查询到的结果?&gt;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;update&lt;/title&gt; &lt;meta charset=&quot;utf-8&quot;&gt;&lt;/head&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;bower_components/jquery/dist/jquery.min.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;bower_components/bootstrap/dist/js/bootstrap.min.js&quot;&gt;&lt;/script&gt;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;bower_components/bootstrap/dist/css/bootstrap.min.css&quot;&gt;&lt;body&gt;&lt;div class=&quot;container&quot;&gt; &lt;h1 class=&quot;page-header&quot;&gt; &lt;a href=&quot;index.php&quot; class=&quot;btn btn-warning&quot;&gt;查看用户&lt;/a&gt; &lt;a href=&quot;&quot; class=&quot;btn btn-primary&quot;&gt;修改用户&lt;/a&gt; &lt;/h1&gt; &lt;form action=&quot;act.php?act=update&amp;Id=&lt;?php echo $Id;?&gt;&quot; method=&quot;post&quot;&gt; &lt;!-- act页面实现的修改功能，这里只需要传入要修改的Id值就可以更改此Id中对应的数据 --&gt; &lt;div class=&quot;form-group&quot;&gt; &lt;label&gt;新用户名:&lt;/label&gt; &lt;input type=&quot;text&quot; class=&quot;form-control&quot; name=&quot;Name&quot; value=&lt;?php echo &quot;&#123;$row[&apos;Name&apos;]&#125;&quot;;//把查询到的数据的Name返回到输入框中，这样子我们就可以实现修改功能 ?&gt; &gt; &lt;/div&gt; &lt;div class=&quot;form-group&quot;&gt; &lt;label&gt;新密码:&lt;/label&gt; &lt;input type=&quot;text&quot; class=&quot;form-control&quot; name=&quot;Pwd&quot; value= &lt;?php echo &quot;&#123;$row[&apos;Pwd&apos;]&#125;&quot;; //同上?&gt; &gt; &lt;/div&gt; &lt;div class=&quot;form-group&quot;&gt; &lt;input type=&quot;submit&quot; class=&quot;btn btn-primary&quot;&gt; &lt;input type=&quot;reset&quot; class=&quot;btn btn-danger&quot;&gt; &lt;/div&gt; &lt;/form&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 插入数据代码：1234567891011121314151617181920212223242526272829303132&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;add&lt;/title&gt; &lt;meta charset=&quot;utf-8&quot;&gt;&lt;/head&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;bower_components/jquery/dist/jquery.min.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;bower_components/bootstrap/dist/js/bootstrap.min.js&quot;&gt;&lt;/script&gt;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;bower_components/bootstrap/dist/css/bootstrap.min.css&quot;&gt;&lt;body&gt; &lt;div class=&quot;container&quot;&gt; &lt;h1 class=&quot;page-header&quot;&gt; &lt;a href=&quot;index.php&quot; class=&quot;btn btn-warning&quot;&gt;查看用户&lt;/a&gt; &lt;a href=&quot;&quot; class=&quot;btn btn-primary&quot;&gt;添加用户&lt;/a&gt; &lt;/h1&gt; &lt;form action=&quot;act.php?act=insert&quot; method=&quot;post&quot;&gt; &lt;!-- act.php页面实现了插入功能，所以这里我们只需要把内容提交到act.php就可以完成插入内容 --&gt; &lt;div class=&quot;form-group&quot;&gt; &lt;label&gt;用户名:&lt;/label&gt; &lt;input type=&quot;text&quot; class=&quot;form-control&quot; name=&quot;Name&quot;&gt; &lt;/div&gt; &lt;div class=&quot;form-group&quot;&gt; &lt;label&gt;密码:&lt;/label&gt; &lt;input type=&quot;text&quot; class=&quot;form-control&quot; name=&quot;Pwd&quot;&gt; &lt;/div&gt; &lt;div class=&quot;form-group&quot;&gt; &lt;input type=&quot;submit&quot; class=&quot;btn btn-primary&quot;&gt; &lt;input type=&quot;reset&quot; class=&quot;btn btn-danger&quot;&gt; &lt;/div&gt; &lt;/form&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 删除功能代码:删除页面代码也在首页(index.php)里实现的一般我们删除操作是需要十分谨慎的，因为数据一旦删除是无法恢复的，那么如果用户不小心点到了按钮，我们就应该提醒他是否要删除。 可以看到这里有一个class是delete，然后看到下面有一段提醒是否执行删除的JS代码： 最后我们看看act.php的代码：1234567891011121314151617181920212223242526272829303132333435363738&lt;?php include &apos;config.inc.php&apos;; //包含PDO链接数据库代码 $act = $_GET[&quot;act&quot;]; //获取GET请求过来的act值，来实现增、删、改。 if($act == &apos;delete&apos;)&#123; //如果是选择删除 $Id = $_GET[&quot;Id&quot;]; //获取GET请求过来的ID $sql = &quot;delete from t1 where Id=?&quot;; //这是SQL语句的删除 $smt = $pdo-&gt;prepare($sql); //给SQL语句做标记 $smt-&gt;bindValue(1,$Id); //绑定一个值到用作预处理的 SQL 语句中的对应命名占位符或问号占位符 if($smt-&gt;execute())&#123; //判断是否执行成功，如果执行成功返回的是1 echo &quot;&lt;script&gt;location=&apos;index.php&apos;&lt;/script&gt;&quot;; //执行成功就跳转到首页(index.php) &#125; &#125; if($act == &apos;insert&apos;)&#123; //如果是选择插入 $Name = $_POST[&quot;Name&quot;]; //获取POST请求的Name值 $Pwd = $_POST[&quot;Pwd&quot;]; //获取POST请求的Pwd值 $sql = &quot;insert into t1(Name,Pwd) values(&apos;&#123;$Name&#125;&apos;,&apos;&#123;$Pwd&#125;&apos;)&quot;; //这是SQL语句的插入 $smt = $pdo-&gt;prepare($sql); //给SQL语句做标记 if($smt-&gt;execute())&#123; //判断是否执行成功 echo &quot;&lt;script&gt;location=&apos;index.php&apos;&lt;/script&gt;&quot;; //执行成功就跳转到首页(index.php) &#125;&#125; /*如果act=update和id=x，那么就执行修改的SQL语句，修改条件(where)是Id=x*/ if($act == &apos;update&apos;)&#123; //如果是更改 $Id = $_GET[&quot;Id&quot;]; //获取GET请求的Id值 $Name = $_POST[&quot;Name&quot;]; //获取POST的Name值 $Pwd = $_POST[&quot;Pwd&quot;]; //获取POST请求的Pwd值 $sql = &quot;update t1 set Name=&apos;&#123;$Name&#125;&apos;,Pwd=&apos;&#123;$Pwd&#125;&apos; where Id=&#123;$Id&#125;&quot;; //这是SQL语句的更改 $smt = $pdo-&gt;prepare($sql); //给SQL语句做标记 if($smt-&gt;execute())&#123; //判断是否执行成功 echo &quot;&lt;script&gt;location=&apos;index.php&apos;&lt;/script&gt;&quot;; //如果执行成功就跳转到首页(index.php) &#125; &#125; ?&gt;","categories":[],"tags":[{"name":"Pwn安全","slug":"Pwn安全","permalink":"127.0.0.1/tags/Pwn安全/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-05-22T15:28:35.356Z","updated":"2018-05-22T15:28:35.356Z","comments":true,"path":"2018/05/22/hello-world/","link":"","permalink":"127.0.0.1/2018/05/22/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}