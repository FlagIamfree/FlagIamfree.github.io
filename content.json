{"meta":{"title":"Iamfree Blog","subtitle":"十年寒窗如一日，一举成名天下知","description":"一个有梦想的技术热爱狂","author":"Iamfree","url":"127.0.0.1"},"pages":[{"title":"","date":"2018-05-22T19:42:20.379Z","updated":"2018-05-22T19:42:20.379Z","comments":true,"path":"404.html","permalink":"127.0.0.1/404.html","excerpt":"","text":"404 *{margin:0;padding:0;outline:none;font-family:\\5FAE\\8F6F\\96C5\\9ED1,宋体;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;-khtml-user-select:none;user-select:none;cursor:default;font-weight:lighter;} .center{margin:0 auto;} .whole{width:100%;height:100%;line-height:100%;position:fixed;bottom:0;left:0;z-index:-1000;overflow:hidden;} .whole img{width:100%;height:100%;} .mask{width:100%;height:100%;position:absolute;top:0;left:0;background:#000;opacity:0.6;filter:alpha(opacity=60);} .b{width:100%;text-align:center;height:400px;position:absolute;top:50%;margin-top:-230px}.a{width:150px;height:50px;margin-top:30px}.a a{display:block;float:left;width:150px;height:50px;background:#fff;text-align:center;line-height:50px;font-size:18px;border-radius:25px;color:#333}.a a:hover{color:#000;box-shadow:#fff 0 0 20px} p{color:#fff;margin-top:40px;font-size:24px;} #num{margin:0 5px;font-weight:bold;} var num=4; function redirect(){ num--; document.getElementById(\"num\").innerHTML=num; if(num"},{"title":"Cai_Team团队介绍","date":"2018-05-23T13:24:44.000Z","updated":"2018-05-25T03:48:50.570Z","comments":true,"path":"about/index.html","permalink":"127.0.0.1/about/index.html","excerpt":"","text":"我们团队创建的初衷是一起学习，一起成长，以及在未来的日子里以战队的名义去参加那些大大小小的CTF比赛 所在正在属于学习阶段，也是刚刚起步阶段，所以在未来的日子里，我会把成长中遇到的困难已经自己的心得写成文章发布到此博客，并且完全免费( 除非一些内部文章，虽然免费，但会有密码的，一般情况下是不会泄露的 )，希望你们的付出已经我们的付出都能得到相应的回报~ 目前团队成员4员( 少的可怜 ): Iamfree mumuo 回火 一条快乐的咸鱼 排名不分前后 后续博客大概会推出以下区域文章： 代码审计 计算机组成原理 Web攻防 Pwn 逆向破解 CTF比赛解题 前端开发 PHP Python 渗透工具编写 等( 以上纯属吹牛逼，哈哈哈哈 ) 让我们携手做一件有意义的事情，一件让我们回忆就值得骄傲，一件正真唱响青春无悔的事情！ 十年寒窗无人问，一举成名天下知 – Cai_Team"},{"title":"分类","date":"2018-05-23T08:26:06.000Z","updated":"2018-05-23T08:26:30.304Z","comments":true,"path":"categories/index.html","permalink":"127.0.0.1/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2018-05-23T08:23:08.000Z","updated":"2018-05-23T08:26:38.303Z","comments":true,"path":"tags/index.html","permalink":"127.0.0.1/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"基于DVWA的反射型Xss测试平台Medium等级讲解","slug":"基于DVWA的反射型Xss测试平台Medium等级讲解","date":"2018-05-25T02:27:24.000Z","updated":"2018-05-25T07:24:22.584Z","comments":true,"path":"2018/05/25/基于DVWA的反射型Xss测试平台Medium等级讲解/","link":"","permalink":"127.0.0.1/2018/05/25/基于DVWA的反射型Xss测试平台Medium等级讲解/","excerpt":"这是继上节课基于DVWA的Xss测试平台Low等级讲解的中等级","text":"这是继上节课基于DVWA的Xss测试平台Low等级讲解的中等级 首先，我们把等级设置为Medium 上节课讲了如何设置这里就不再讲了 查看Medium源代码: 点开后是这样的： 代码：1234567891011121314&lt;?phpheader (\"X-XSS-Protection: 0\");// Is there any input?if( array_key_exists( \"name\", $_GET ) &amp;&amp; $_GET[ 'name' ] != NULL ) &#123; // Get input $name = str_replace( '&lt;script&gt;', '', $_GET[ 'name' ] ); // Feedback for end user echo \"&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;\";&#125;?&gt; 这里的代码部分也很好理解，比上一章仅仅多了一个过滤，下面来详细讲解一下。 if( array_key_exists( &quot;name&quot;, $_GET ) &amp;&amp; $_GET[ &#39;name&#39; ] != NULL )这段代码的意思是，如果$_GET中有name这个key并且$_GET[ &#39;name&#39; ]的值不为空的话就执行{}里面的代码。$name = str_replace( &#39;&lt;script&gt;&#39;, &#39;&#39;, $_GET[ &#39;name&#39; ] );这句话的意思是把$_GET[&#39; name &#39;]中的&lt;script&gt;过滤为空( 并不安全 ),最后一段代码就是输出Hello+name的值在页面上 看懂代码后，如何利用呢?我们在上面看代码的时候明白了，在这个Medium等级中，只做了把&lt;script&gt;字符给过滤了，那么我下面就来演示一下如何绕过 先来输入&lt;script&gt;后看看是否为空:可以看到这里的输出是为空的，下面来讲绕过 绕过方法1：在输入框中输入&lt;scr&lt;script&gt;ipt&gt;alert(&#39;iamfree&#39;)&lt;/script&gt;，来看看结果先: 解释: 绕过方法2:用大写的绕过,输入&lt;SCRIPT&gt;alert(&#39;iamfree&#39;)&lt;/SCRIPT&gt; 如何防御防御方法1:其实防御的方法也和上篇一样，但还有一个也很棒的方法哟。 代码:1234567891011121314151617&lt;?phpheader (\"X-XSS-Protection: 0\");// Is there any input?if( array_key_exists( \"name\", $_GET ) &amp;&amp; $_GET[ 'name' ] != NULL ) &#123; // Get input // $name = str_replace( '&lt;script&gt;', 'xss', $_GET[ 'name' ] ); foreach ( $_GET as $key =&gt; $value ) &#123; //把$_GET数组里的值分成$key和$value $name = $_GET[ $key ] = htmlspecialchars( $value ); //把$_GET数组中$key对应的$value值html实例化，并且赋值给$name变量 &#125; // Feedback for end user $html .= \"&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;\";&#125;?&gt; 防御方法2： 只需要加上一条preg_replace( &#39;/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i&#39;, &#39;&#39;, $_GET[ &#39;name&#39; ] )，这也是high等级的防御方法 十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[{"name":"Web攻防","slug":"Web攻防","permalink":"127.0.0.1/categories/Web攻防/"}],"tags":[{"name":"代码审计","slug":"代码审计","permalink":"127.0.0.1/tags/代码审计/"},{"name":"PHP","slug":"PHP","permalink":"127.0.0.1/tags/PHP/"},{"name":"Dvwa","slug":"Dvwa","permalink":"127.0.0.1/tags/Dvwa/"},{"name":"渗透测试","slug":"渗透测试","permalink":"127.0.0.1/tags/渗透测试/"}]},{"title":"简单的用户管理分析","slug":"简单的用户管理分析","date":"2018-05-24T13:14:59.000Z","updated":"2018-05-25T07:12:31.269Z","comments":true,"path":"2018/05/24/简单的用户管理分析/","link":"","permalink":"127.0.0.1/2018/05/24/简单的用户管理分析/","excerpt":"项目介绍这是笔者从GITHUB上找的简单PHP程序( 一个可 增删查 的用户数据管理 )","text":"项目介绍这是笔者从GITHUB上找的简单PHP程序( 一个可 增删查 的用户数据管理 ) 数据库连接代码:先介绍一下数据库的表结构： 123456&lt;?php $pdo = new PDO('mysql:host=localhost;dbname=data','root','root'); //PDO(PHP访问数据库定义了一个轻量级的、一致性的接口，它提供了一个数据访问抽象层，这样，无论使用什么数据库，都可以通过一致的函数执行查询和获取数据，比如mysql有limit，MSSQL没有limit，pdo会自动转换) $pdo-&gt;exec('set names utf8'); //设置编码 $pdo-&gt;setAttribute(PDO::ATTR_DEFAULT_FETCH_MODE,PDO::FETCH_ASSOC); //设置默认结果集模式为关联数组 $pdo-&gt;setAttribute(PDO::ATTR_ERRMODE,PDO::ERRMODE_EXCEPTION); //修改报错模式?&gt; 其中的PDO是:PDO(PHP访问数据库定义了一个轻量级的、一致性的接口，它提供了一个数据访问抽象层，这样，无论使用什么数据库，都可以通过一致的函数执行查询和获取数据，比如mysql有limit，MSSQL没有limit，pdo会自动转换) PDO好处： 更换数据库时取得极大便利(从A数据库换成其他数据库可以不需要修改查询的代码，因为PDO帮我实现了) 更换数据库时取得极大便利 首页代码：12345678910111213141516171819202122232425&lt;?php include 'config.inc.php'; //包含连接数据库的代码 $len = 10; //每页展现10条数据 $page = !empty($_GET[\"page\"]) ? $_GET[\"page\"] : 1;//三元表达式，表示如果$_GET['page']为空时，默认值为1 $sqlTotal = \"select count(Id) from t1\"; // SQL语句。意思是查询t1表中的Id字段个数 $smtTotal = $pdo-&gt;prepare($sqlTotal); //准备要执行的SQL语句并返回一个 PDOStatement 对象(PHP 5 &gt;= 5.1.0, PECL pdo &gt;= 0.1.0) echo \"&lt;strong&gt;\\$sqlTotal:&lt;/strong&gt;\"; print_r($smtTotal); echo \"&lt;br /&gt;\"; echo \"&lt;strong&gt;execute():&lt;/strong&gt;\"; print_r($smtTotal-&gt;execute()); $tot = $smtTotal-&gt;fetchColumn(); //总记录数 echo \"&lt;br /&gt;\"; echo \"&lt;strong&gt;\\$tot:&lt;/strong&gt;\"; print_r($tot); echo \"&lt;br /&gt;\"; $pages = ceil($tot/$len); //总页数 echo \"&lt;strong&gt;\\$pages:&lt;/strong&gt;\"; print_r($pages); ... ...(省略，先讲解一下这段代码的用法) 可以看看我写的PDO的文章(别夸我，谁让我是爱学习的好孩子) 首页的代码我统统写了注释： 更改用户数据代码：12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152&lt;?php/* 思路:先获取对应的数据，然后返回到输入框，如果我们选择提交，表单就会发送的数据就会更改到数据库里，实现更改内容*/ include 'config.inc.php';$Id = $_GET[\"Id\"]; //获取GET请求过来的Id值$sql = \"select * from t1 where Id=?\"; //SQL语句的查询$smt = $pdo-&gt;prepare($sql); //给SQL语句做标记$smt-&gt;bindValue(1,$Id); //想成是给上面的?改成$Id变量的值$smt-&gt;execute(); //执行SQL语句$row = $smt-&gt;fetch(); //接收SQL语句查询到的结果?&gt;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;update&lt;/title&gt; &lt;meta charset=\"utf-8\"&gt;&lt;/head&gt;&lt;script type=\"text/javascript\" src=\"bower_components/jquery/dist/jquery.min.js\"&gt;&lt;/script&gt;&lt;script type=\"text/javascript\" src=\"bower_components/bootstrap/dist/js/bootstrap.min.js\"&gt;&lt;/script&gt;&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"bower_components/bootstrap/dist/css/bootstrap.min.css\"&gt;&lt;body&gt;&lt;div class=\"container\"&gt; &lt;h1 class=\"page-header\"&gt; &lt;a href=\"index.php\" class=\"btn btn-warning\"&gt;查看用户&lt;/a&gt; &lt;a href=\"\" class=\"btn btn-primary\"&gt;修改用户&lt;/a&gt; &lt;/h1&gt; &lt;form action=\"act.php?act=update&amp;Id=&lt;?php echo $Id;?&gt;\" method=\"post\"&gt; &lt;!-- act页面实现的修改功能，这里只需要传入要修改的Id值就可以更改此Id中对应的数据 --&gt; &lt;div class=\"form-group\"&gt; &lt;label&gt;新用户名:&lt;/label&gt; &lt;input type=\"text\" class=\"form-control\" name=\"Name\" value=&lt;?php echo \"&#123;$row['Name']&#125;\";//把查询到的数据的Name返回到输入框中，这样子我们就可以实现修改功能 ?&gt; &gt; &lt;/div&gt; &lt;div class=\"form-group\"&gt; &lt;label&gt;新密码:&lt;/label&gt; &lt;input type=\"text\" class=\"form-control\" name=\"Pwd\" value= &lt;?php echo \"&#123;$row['Pwd']&#125;\"; //同上?&gt; &gt; &lt;/div&gt; &lt;div class=\"form-group\"&gt; &lt;input type=\"submit\" class=\"btn btn-primary\"&gt; &lt;input type=\"reset\" class=\"btn btn-danger\"&gt; &lt;/div&gt; &lt;/form&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 插入数据代码：1234567891011121314151617181920212223242526272829303132&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;add&lt;/title&gt; &lt;meta charset=\"utf-8\"&gt;&lt;/head&gt;&lt;script type=\"text/javascript\" src=\"bower_components/jquery/dist/jquery.min.js\"&gt;&lt;/script&gt;&lt;script type=\"text/javascript\" src=\"bower_components/bootstrap/dist/js/bootstrap.min.js\"&gt;&lt;/script&gt;&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"bower_components/bootstrap/dist/css/bootstrap.min.css\"&gt;&lt;body&gt; &lt;div class=\"container\"&gt; &lt;h1 class=\"page-header\"&gt; &lt;a href=\"index.php\" class=\"btn btn-warning\"&gt;查看用户&lt;/a&gt; &lt;a href=\"\" class=\"btn btn-primary\"&gt;添加用户&lt;/a&gt; &lt;/h1&gt; &lt;form action=\"act.php?act=insert\" method=\"post\"&gt; &lt;!-- act.php页面实现了插入功能，所以这里我们只需要把内容提交到act.php就可以完成插入内容 --&gt; &lt;div class=\"form-group\"&gt; &lt;label&gt;用户名:&lt;/label&gt; &lt;input type=\"text\" class=\"form-control\" name=\"Name\"&gt; &lt;/div&gt; &lt;div class=\"form-group\"&gt; &lt;label&gt;密码:&lt;/label&gt; &lt;input type=\"text\" class=\"form-control\" name=\"Pwd\"&gt; &lt;/div&gt; &lt;div class=\"form-group\"&gt; &lt;input type=\"submit\" class=\"btn btn-primary\"&gt; &lt;input type=\"reset\" class=\"btn btn-danger\"&gt; &lt;/div&gt; &lt;/form&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 删除功能代码:删除页面代码也在首页(index.php)里实现的一般我们删除操作是需要十分谨慎的，因为数据一旦删除是无法恢复的，那么如果用户不小心点到了按钮，我们就应该提醒他是否要删除。 可以看到这里有一个class是delete，然后看到下面有一段提醒是否执行删除的JS代码： 最后我们看看act.php的代码：1234567891011121314151617181920212223242526272829303132333435363738&lt;?php include 'config.inc.php'; //包含PDO链接数据库代码 $act = $_GET[\"act\"]; //获取GET请求过来的act值，来实现增、删、改。 if($act == 'delete')&#123; //如果是选择删除 $Id = $_GET[\"Id\"]; //获取GET请求过来的ID $sql = \"delete from t1 where Id=?\"; //这是SQL语句的删除 $smt = $pdo-&gt;prepare($sql); //给SQL语句做标记 $smt-&gt;bindValue(1,$Id); //绑定一个值到用作预处理的 SQL 语句中的对应命名占位符或问号占位符 if($smt-&gt;execute())&#123; //判断是否执行成功，如果执行成功返回的是1 echo \"&lt;script&gt;location='index.php'&lt;/script&gt;\"; //执行成功就跳转到首页(index.php) &#125; &#125; if($act == 'insert')&#123; //如果是选择插入 $Name = $_POST[\"Name\"]; //获取POST请求的Name值 $Pwd = $_POST[\"Pwd\"]; //获取POST请求的Pwd值 $sql = \"insert into t1(Name,Pwd) values('&#123;$Name&#125;','&#123;$Pwd&#125;')\"; //这是SQL语句的插入 $smt = $pdo-&gt;prepare($sql); //给SQL语句做标记 if($smt-&gt;execute())&#123; //判断是否执行成功 echo \"&lt;script&gt;location='index.php'&lt;/script&gt;\"; //执行成功就跳转到首页(index.php) &#125;&#125; /*如果act=update和id=x，那么就执行修改的SQL语句，修改条件(where)是Id=x*/ if($act == 'update')&#123; //如果是更改 $Id = $_GET[\"Id\"]; //获取GET请求的Id值 $Name = $_POST[\"Name\"]; //获取POST的Name值 $Pwd = $_POST[\"Pwd\"]; //获取POST请求的Pwd值 $sql = \"update t1 set Name='&#123;$Name&#125;',Pwd='&#123;$Pwd&#125;' where Id=&#123;$Id&#125;\"; //这是SQL语句的更改 $smt = $pdo-&gt;prepare($sql); //给SQL语句做标记 if($smt-&gt;execute())&#123; //判断是否执行成功 echo \"&lt;script&gt;location='index.php'&lt;/script&gt;\"; //如果执行成功就跳转到首页(index.php) &#125; &#125; ?&gt; 十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[{"name":"编程","slug":"编程","permalink":"127.0.0.1/categories/编程/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"127.0.0.1/tags/PHP/"}]},{"title":"基于DVWA的反射型Xss测试平台Low等级讲解","slug":"基于DVWA的Xss测试平台Low等级讲解","date":"2018-05-24T09:34:46.000Z","updated":"2018-05-25T06:53:32.520Z","comments":true,"path":"2018/05/24/基于DVWA的Xss测试平台Low等级讲解/","link":"","permalink":"127.0.0.1/2018/05/24/基于DVWA的Xss测试平台Low等级讲解/","excerpt":"Dvwa是一个网站渗透测试演练平台，里面包括了Xss攻击,Sql注入攻击，Csrf漏洞、文件上传漏洞、命令注入漏洞等，而且每个漏洞都分为Low(低等级)、Medium( 中等级 )、High( 高等级 )、Impossible( 没漏洞等级 )","text":"Dvwa是一个网站渗透测试演练平台，里面包括了Xss攻击,Sql注入攻击，Csrf漏洞、文件上传漏洞、命令注入漏洞等，而且每个漏洞都分为Low(低等级)、Medium( 中等级 )、High( 高等级 )、Impossible( 没漏洞等级 ) 下载过程和安装过程网上可以找到我就不讲解了。 首先将Dvwa等级设置成Low: 开始Xss漏洞讲解Xss反射型：当输入hello在输入框点击Submit后，会输出一个Hello iamfree，那么我们来看看这是如何实现的 实现的代码：因为这是Low级别的，所以我们可以清楚的看见这里没有做任何过滤，我们只需要输入一串而已的Js代码就可以实现盗取别人Cookie，做钓鱼之类的功能，下面我来简单的演示一下~ 输入&lt;img src=x onerror=alert(&#39;iamfree&#39;)&gt;后，Url变成http://127.0.0.1/dvwa/vulnerabilities/xss_r/?name=%3Cimg+src%3Dx+onerror%3Dalert%28%27iamfree%27%29%3E#，效果: &lt;img src=x onerror=alert(&#39;iamfree&#39;)&gt;的src表示img图片的地址，可以是本地也可以是Url形式;onerror的意思是如果图片没有正常显示的话就会执行=后面的代码，因为这里src=x而x是不存在的，所以无法显示，就会报错了~ 如何防御这里的话防御很简单的，只需要一个函数即可： 防御代码:12345678910111213&lt;?phpheader (\"X-XSS-Protection: 0\");// Is there any input?if( array_key_exists( \"name\", $_GET ) &amp;&amp; $_GET[ 'name' ] != NULL ) &#123; // Feedback for end user // 防御的反射Xss $name = htmlspecialchars($_GET['name']); $html .= '&lt;pre&gt;Hello ' . $name . '&lt;/pre&gt;';&#125;?&gt; 继续访问刚才的Url(http://127.0.0.1/dvwa/vulnerabilities/xss_r/?name=%3Cimg+src%3Dx+onerror%3Dalert%28%27iamfree%27%29%3E#)，看看是否有效:成功的防止了Xss反射型攻击了~ htmlspecialchars函数的官方解释: 十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[{"name":"Web攻防","slug":"Web攻防","permalink":"127.0.0.1/categories/Web攻防/"}],"tags":[{"name":"代码审计","slug":"代码审计","permalink":"127.0.0.1/tags/代码审计/"},{"name":"PHP","slug":"PHP","permalink":"127.0.0.1/tags/PHP/"},{"name":"Dvwa","slug":"Dvwa","permalink":"127.0.0.1/tags/Dvwa/"},{"name":"渗透测试","slug":"渗透测试","permalink":"127.0.0.1/tags/渗透测试/"}]},{"title":"某CTF赛的一处代码简单讲解","slug":"某CTF赛的一处代码简单讲解","date":"2018-05-24T08:07:33.000Z","updated":"2018-05-25T06:53:30.960Z","comments":true,"path":"2018/05/24/某CTF赛的一处代码简单讲解/","link":"","permalink":"127.0.0.1/2018/05/24/某CTF赛的一处代码简单讲解/","excerpt":"此篇文章只是给里面的代码处做一下详细的讲解~原文地址:loudong.360.cn/School/content/id/285","text":"此篇文章只是给里面的代码处做一下详细的讲解~原文地址:loudong.360.cn/School/content/id/285 CTF线下赛中一处代码( 红色区域处 )，现在就是来讲解这个的~ 讲解开始:首先看一下我写的这个代码:123456789101112131415function e( $str )&#123; if ( is_array( $str ) )&#123; //如果是列表~ echo \"&lt;pre&gt;\"; var_dump( $str ); &#125;else &#123; echo $str ; &#125;&#125;$mylist = [ 'ctrl' =&gt; ( !empty($_GET['p']) ? $_GET['p'] : 'blog' ) , //ctrl的value值：如果get请求的p值不为空，那么就返回get请求的p值，否者返回blog 'template' =&gt; ( !empty($_GET['t']) ? $_GET['t'] : 'pc' ) //template的value值：如果get请求的t值不为空，那么就返回get请求的t值，否者返回pc\\];e( $mylist ); 这里的!empty($_GET[&#39;p&#39;]) ? $_GET[&#39;p&#39;] : &#39;blog&#39;是三元表达式，详细用法我也在代码处讲解过了 实验一下代码功能：如果没有添加任何值的话，默认的就是ctrl的值为blog,template的值为pc 我们传递一下GET请求的p值和GET请求的t值: 如果你们觉得这篇文章有点水的话… 那也确实是，哈哈哈(太基础)，但是我只是想来做一篇文章来摆设摆设~ 十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[{"name":"Web攻防","slug":"Web攻防","permalink":"127.0.0.1/categories/Web攻防/"}],"tags":[{"name":"代码审计","slug":"代码审计","permalink":"127.0.0.1/tags/代码审计/"},{"name":"PHP","slug":"PHP","permalink":"127.0.0.1/tags/PHP/"},{"name":"CTF","slug":"CTF","permalink":"127.0.0.1/tags/CTF/"}]}]}