{"meta":{"title":"Cai_Team","subtitle":"十年寒窗如一日，一举成名天下知","description":"一支有梦想的技术团队","author":null,"url":"127.0.0.1"},"pages":[{"title":"","date":"2018-05-22T19:42:20.379Z","updated":"2018-05-22T19:42:20.379Z","comments":true,"path":"404.html","permalink":"127.0.0.1/404.html","excerpt":"","text":"404 *{margin:0;padding:0;outline:none;font-family:\\5FAE\\8F6F\\96C5\\9ED1,宋体;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;-khtml-user-select:none;user-select:none;cursor:default;font-weight:lighter;} .center{margin:0 auto;} .whole{width:100%;height:100%;line-height:100%;position:fixed;bottom:0;left:0;z-index:-1000;overflow:hidden;} .whole img{width:100%;height:100%;} .mask{width:100%;height:100%;position:absolute;top:0;left:0;background:#000;opacity:0.6;filter:alpha(opacity=60);} .b{width:100%;text-align:center;height:400px;position:absolute;top:50%;margin-top:-230px}.a{width:150px;height:50px;margin-top:30px}.a a{display:block;float:left;width:150px;height:50px;background:#fff;text-align:center;line-height:50px;font-size:18px;border-radius:25px;color:#333}.a a:hover{color:#000;box-shadow:#fff 0 0 20px} p{color:#fff;margin-top:40px;font-size:24px;} #num{margin:0 5px;font-weight:bold;} var num=4; function redirect(){ num--; document.getElementById(\"num\").innerHTML=num; if(num"},{"title":"Cai_Team团队介绍","date":"2018-05-23T13:24:44.000Z","updated":"2018-05-25T03:48:50.570Z","comments":true,"path":"about/index.html","permalink":"127.0.0.1/about/index.html","excerpt":"","text":"我们团队创建的初衷是一起学习，一起成长，以及在未来的日子里以战队的名义去参加那些大大小小的CTF比赛 所在正在属于学习阶段，也是刚刚起步阶段，所以在未来的日子里，我会把成长中遇到的困难已经自己的心得写成文章发布到此博客，并且完全免费( 除非一些内部文章，虽然免费，但会有密码的，一般情况下是不会泄露的 )，希望你们的付出已经我们的付出都能得到相应的回报~ 目前团队成员4员( 少的可怜 ): Iamfree mumuo 回火 一条快乐的咸鱼 排名不分前后 后续博客大概会推出以下区域文章： 代码审计 计算机组成原理 Web攻防 Pwn 逆向破解 CTF比赛解题 前端开发 PHP Python 渗透工具编写 等( 以上纯属吹牛逼，哈哈哈哈 ) 让我们携手做一件有意义的事情，一件让我们回忆就值得骄傲，一件正真唱响青春无悔的事情！ 十年寒窗无人问，一举成名天下知 – Cai_Team"},{"title":"标签","date":"2018-05-23T08:23:08.000Z","updated":"2018-05-23T08:26:38.303Z","comments":true,"path":"tags/index.html","permalink":"127.0.0.1/tags/index.html","excerpt":"","text":""},{"title":"分类","date":"2018-05-23T08:26:06.000Z","updated":"2018-05-23T08:26:30.304Z","comments":true,"path":"categories/index.html","permalink":"127.0.0.1/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"PHP函数记录","slug":"PHP函数记录","date":"2018-05-26T12:12:10.000Z","updated":"2018-05-26T12:56:32.592Z","comments":true,"path":"2018/05/26/PHP函数记录/","link":"","permalink":"127.0.0.1/2018/05/26/PHP函数记录/","excerpt":"持续更新中,此笔记正确食用方式是用于学习与代码审计~","text":"持续更新中,此笔记正确食用方式是用于学习与代码审计~ 不显示错误信息:error_reporting(0) 文件包含函数:include()、include_once()、require()、require_once() 开启session:session_start() 是否开启了gpc功能:if( !get_magic_quotes_gpc() ){} 过滤函数:addslashes()入敏感的内容会被转义(\\) 等号用处分类：123451、=：赋值，在逻辑运算时也有效；2、==：等于运算，但是不比较值的类型；3、===：完全等于运算，不仅比较值，而且还比较值的类型，只有两者一致才为真。 chdir用法: mkdir用法: 123&lt;?php mkdir('1.iamfree') //会在当前目录下创建一个1.iamfree文件夹?&gt; const用法：12345678&lt;?php const name='iamfree'; echo name;/*输出:iamfree*/?&gt; htmlspecialchars()函数： 执行转换: 字符 替换后 &amp; (&amp; 符号) &amp;amp; “ (双引号) &amp;quot;，除非设置了 ENT_NOQUOTES ‘ (单引号) 设置了 ENT_QUOTES 后， &#039; (如果是 ENT_HTML401) ，或者 &apos; (如果是 ENT_XML1、ENT_XHTML 或 ENT_HTML5)。 &lt; (小于) &amp;lt > (大于) &amp;gt extract()函数: parse_str()： 123456 &lt;?php parse_str('name=iamfree'); //把name变成变量名，iamfree变成变量值 echo $name;//输出iamfree?&gt; import_request_variables(): 此函数把GET、POST、COOKIE的参数注册为变量，一般不建议开启 注意,只在 PHP4.1到PHP5.4之间可用 1234567&lt;?php $name = 'whoami'; import_request_variables('GP'); //G表示GET、P表示POST如果有C表示COOKIE；这里的GP表示注册GET和POST请求的参数为变量 echo $name;?&gt; 效果： array_key_exists()：1array_key_exists ( $key , $array ) 数组里有键 key 时，array_key_exists() 返回 TRUE。 key 可以是任何能作为数组索引的值。 str_ireplace过滤sql语句：此函数用法：将 whoami? 中的 whoami 被 iamfree 替换，也就是说把whoami?里的whoami替换成iamfree所以结果就是iamfree? 这里其实是可以绕过的，比如： 变量覆盖: 难一点的： 12345678&lt;?php foreach (array( '_GET','_POST' ) as $key =&gt; $value) &#123; foreach ($$value as $_key =&gt; $_value)&#123; echo $_key.':'.$_value; echo \"&lt;br &gt;\"; &#125; &#125;?&gt; 执行后的结果： define()用法:1234&lt;?php define('t',time()); //把time()的返回值定义为常量(t) echo t;?&gt; 三元表达式: 123456&lt;?php $name = !empty($_GET['name']) ? $_GET['name'] : '此人无名'; //表示如果$_GET['name']不为空的话就返回$_GET['name']如果为空就返回 此人无名。 echo $name;?&gt; 还可以有一种判断方法： 12345&lt;?php echo 1; isset($_GET['name']) &amp;&amp; exit('exit'); //如果isset($_GET['name'])为真也就是name这个参数存在的时候，会执行exit('exit')，相反，不存在的时候不会执行exit('exit') echo 2;?&gt; name参数不存在时： name参数存在时： nl2br()函数: eval()函数: 12345678&lt;?php$string = 'cup';$name = 'coffee';$str = 'This is a $string with my $name in it.';echo $str. \"\\n\";eval(\"\\$str = \\\"$str\\\";\");echo $str. \"\\n\";?&gt; 输出：This is a $string with my $name in it.This is a cup with my coffee in it. explode()函数: 也就是拆分 copy()函数: copy(source,destination)参数 | 描述:-: | :-:source | 必需。规定要复制的文件。destination | 必需。规定复制文件的目的地。 将文件从 source 拷贝到 destination。如果成功则返回 TRUE，否则返回 FALSE。 trim()函数:移除字符串两侧的空格等特殊字符 strcasecmp()函数: 正则表达式:preg_match()函数: 匹配一下i：这里的//是定界符 ，之需要二处字符一样就可以，比如== -- ?? 等等 但是有些不能做定位符 比如a到z、A到Z、0到9、空格、\\ 匹配全部英文字母(包括大写)： 替换匹配到的内容: define()函数：1define(name,value,case_insensitive) 参数 描叙 name 必需。规定常量的名称。 value 必需。规定常量的值。 case_insensitive 可选。规定常量的名称是否对大小写敏感。 若设置为 true，则对变量名大小写不敏感。默认是 false（大小写敏感）。 dirname()函数：dirname(path)参数|描述:–:|:–:path|必需。规定要检查的路径。 该函数返回去掉文件名后的目录名 iconv()函数：iconv ( in_charset , out_charset , str )将字符串 str 从 in_charset 转换编码到 out_charset。 intval()函数:还可以当防止SQL注入: reset()函数: $$变量覆盖: 还有一个很有趣的：1234567&lt;?php $g = '_GET'; $g = $$g; //这个时候$$g的第二个$与$g的值拼接了变成了$_GET，第一个$变成了$g，所以$g=$_GET echo $g['name']; ?&gt; isset()函数:检测变量是否已设置并且非 NULLunset()函数:释放给定的变量 parse_ini_file() 解析一个配置文件。1array parse_ini_file ( string $filename [, bool $process_sections = false [, int $scanner_mode = INI_SCANNER_NORMAL ]] ) 载入一个由 filename 指定的 ini 文件，并将其中的设置作为一个联合数组返回。 参数 用法 filename 要解析的 ini 文件的文件名。 process_sections 如果将最后的 process_sections 参数设为 TRUE，将得到一个多维数组，包括了配置文件中每一节的名称和设置。process_sections 的默认值是 FALSE。 scanner_mode Can either be INI_SCANNER_NORMAL (default) or INI_SCANNER_RAW. If INI_SCANNER_RAW is supplied, then option values will not be parsed. 返回值： 成功时以关联数组 array 返回设置，失败时返回 FALSE。 urldecode()函数，可能会造成urldecode二次注入： $_FILES用法: is_numeric()函数： 判断是否为数字，是返回1，不是返回空 dvwa的sql注入的impossible等级源码(dvwa的impossible不存在sql注入)：当然 我看不懂这几行:12$data = $db-&gt;prepare( 'SELECT first_name, last_name FROM users WHERE user_id = (:id) LIMIT 1;' );$data-&gt;bindParam( ':id', $id, PDO::PARAM_INT ); substr()函数:12345678910&lt;?php$rest = substr(\"abcdef\", -1); // 返回 \"f\"$rest = substr(\"abcdef\", -2); // 返回 \"ef\"$rest = substr(\"abcdef\", -3, 1); // 返回 \"d\"$rest = substr(\"abcdef\", 0, -1); // 返回 \"abcde\"$rest = substr(\"abcdef\", 2, -1); // 返回 \"cde\"$rest = substr(\"abcdef\", 4, -4); // 返回 \"\"$rest = substr(\"abcdef\", -3, -1); // 返回 \"de\"?&gt; strrpos()函数:1234567891011&lt;?php$foo = \"0123456789a123456789b123456789c\";var_dump(strrpos($foo, '7', -5)); // 从尾部第 5 个位置开始查找 // 结果: int(17)var_dump(strrpos($foo, '7', 20)); // 从第 20 个位置开始查找 // 结果: int(27)var_dump(strrpos($foo, '7', 28)); // 结果: bool(false)?&gt; extract()函数： 常见语法：1if(empty($a)) $a = 'hello world'; //如果$a为空，那么它的值为hello world 123$s = 'sys'.'tem';$s('whoami'); //返回desktop-a0iqkh2\\iamfree/*这里就是执行了whoami的命令*/ 匿名函数：12$C_F = create_function('$name','return $name;'); //$name的位置是传递什么参数，第二个参数是函数里执行什么代码echo $C_F('iamfree'); //输出iamfree 回调函数：12345function Func($name)&#123; echo \"hello $name\";&#125;call_user_func('Func','iamfree'); /*输出:hello iamfree*/ 12call_user_func(&apos;system&apos;,&apos;whoami&apos;);/*输出：desktop-a0iqkh2\\iamfree*/ 命令执行函数： exec() — 执行一个外部程序 passthru() — 执行外部程序并且显示原始输出 proc_open() — 执行一个命令，并且打开用来输入/输出的文件指针。 shell_exec() &amp; — 通过 shell 环境执行命令，并且将完整的输出以字符串的方式返回。 system() — 执行外部程序，并且显示输出 popen() — 通过 popen() 的参数传递一条命令，并对 popen() 所打开的文件进行执行。 文件操作函数： copy — 拷贝文件 file_get_contents — 将整个文件读入一个字符串 file_put_contents — 将一个字符串写入文件 file — 把整个文件读入一个数组中 fopen — 打开文件或者 URL move_uploaded_file — 将上传的文件移动到新位置 readfile — 输出文件 rename — 重命名一个文件或目录 rmdir — 删除目录 unlink &amp; delete — 删除文件 任意文件读取、写入、删除往往是上面几个函数受到了控制（当然还有其他的函数）。不同的函数在不同的场景有不同的作用和不同的利用手法。读取：可以读取配置等文件，拿到key写入：可以写入shell代码相关的内容删除：可以删除.lock文件而可以重新安装覆盖 特殊函数信息泄漏bool phpinfo ([ int $what = INFO_ALL ] )输出 PHP 当前状态的大量信息，包含了PHP编译选项、启用的扩展、PHP版本、服务器信息和环境变量（如果编译为一个模块的话）、PHP环境变量、操作系统版本信息、path变量、配置选项的本地值和主值、HTTP头和PHP授权信息(License)。 软连接-读取文件内容bool symlink ( string $target , string $link )symlink() 对于已有的 target 建立一个名为 link 的符号连接。string readlink ( string $path )readlink() 和同名的 C 函数做同样的事，返回符号连接的内容。 环境变量string getenv ( string $varname )获取一个环境变量的值。bool putenv ( string $setting )添加 setting 到服务器环境变量。 环境变量仅存活于当前请求期间。 在请求结束时环境会恢复到初始状态。 加载扩展bool dl ( string $library )载入指定参数 library 的 PHP 扩展。 配置相关string ini_get ( string $varname ) 成功时返回配置选项的值。12string ini_set ( string $varname , string $newvalue )string ini_alter ( string $varname , string $newvalue ) 设置指定配置选项的值。这个选项会在脚本运行时保持新的值，并在脚本结束时恢复。void ini_restore ( string $varname )恢复指定的配置选项到它的原始值。 数字判断bool is_numeric ( mixed $var )如果 var 是数字和数字字符串则返回 TRUE，否则返回 FALSE。仅用is_numeric判断而不用intval转换就有可能插入16进制的字符串到数据库，进而可能导致sql二次注入。 数组相关bool in_array ( mixed $needle , array $haystack [, bool $strict = FALSE ] )在 haystack 中搜索 needle，如果没有设置 strict 则使用宽松的比较。该函数有一个特性，比较之前会进行自动类型转换。in_array($str,$arr)判断$str是否在$arr数组里 变量覆盖如果 str 是 URL 传递入的查询字符串（query string），则将它解析为变量并设置到当前作用域：void parse_str ( string $str [, array &amp;$arr ] )本函数用来将变量从数组中导入到当前的符号表中。检查每个键名看是否可以作为一个合法的变量名，同时也检查和符号表中已有的变量名的冲突：int extract ( array &amp;$var_array [, int $extract_type = EXTR_OVERWRITE [, string $prefix = NULL ]] ) bool mb_parse_str ( string $encoded_string [, array &amp;$result ] )解析 GET/POST/COOKIE 数据并设置全局变量。 由于 PHP 不提供原始 POST/COOKIE 数据，目前它仅能够用于 GET 数据。 它解析了 URL 编码过的数据，检测其编码，并转换编码为内部编码，然后设置其值为 array的 result 或者全局变量。bool import_request_variables ( string $types [, string $prefix ] )将 GET／POST／Cookie 变量导入到全局作用域中。如果你禁止了 register_globals，但又想用到一些全局变量，那么此函数就很有用。 123456789101112131415&lt;?php$str = \"first=value&amp;arr[]=foo+bar&amp;arr[]=baz\";// 推荐用法parse_str($str, $output);echo $output['first']; // valueecho $output['arr'][0]; // foo barecho $output['arr'][41]; // baz// 不建议这么用parse_str($str);echo $first; // valueecho $arr[0]; // foo barecho $arr[1]; // baz?&gt; 列目录array glob ( string $pattern [, int $flags = 0 ] )glob() 函数依照 libc glob() 函数使用的规则寻找所有与 pattern 匹配的文件路径，类似于一般shell所用的规则一样。不进行缩写扩展或参数替代。var_dump(glob(&#39;c*.php&#39;)); //列出c开头的PHP文件 无参数获取信息返回一个包含所有已定义变量列表的多维数组，这些变量包括环境变量、服务器变量和用户定义的变量: array get_defined_vars ( void )返回当前所有已定义的常量名和值。 这包含 define() 函数所创建的，也包含了所有扩展所创建的:array get_defined_constants ([ bool $categorize = false ] )返回一个包含所有已定义函数列表的多维数组:array get_defined_functions ( void )返回所有被 include、 include_once、 require 和 require_once:array get_included_files ( void ) rand()函数: $_REQUEST用法： file_exists()函数：检查文件或目录是否存在 exit用法：多处用在install.php里，因为成功安装一次之后就能再一次运行安装了，除非将exit删除了。 十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[{"name":"编程","slug":"编程","permalink":"127.0.0.1/categories/编程/"},{"name":"代码审计","slug":"编程/代码审计","permalink":"127.0.0.1/categories/编程/代码审计/"}],"tags":[{"name":"代码审计","slug":"代码审计","permalink":"127.0.0.1/tags/代码审计/"},{"name":"PHP","slug":"PHP","permalink":"127.0.0.1/tags/PHP/"},{"name":"原创","slug":"原创","permalink":"127.0.0.1/tags/原创/"}]},{"title":"Dvwa中xss的impossible等级是如何防御的","slug":"Dvwa中xss的impossible等级是如何防御的","date":"2018-05-25T13:59:43.000Z","updated":"2018-05-25T14:06:56.641Z","comments":true,"path":"2018/05/25/Dvwa中xss的impossible等级是如何防御的/","link":"","permalink":"127.0.0.1/2018/05/25/Dvwa中xss的impossible等级是如何防御的/","excerpt":"","text":"十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[{"name":"Web攻防","slug":"Web攻防","permalink":"127.0.0.1/categories/Web攻防/"}],"tags":[{"name":"代码审计","slug":"代码审计","permalink":"127.0.0.1/tags/代码审计/"},{"name":"PHP","slug":"PHP","permalink":"127.0.0.1/tags/PHP/"},{"name":"Dvwa","slug":"Dvwa","permalink":"127.0.0.1/tags/Dvwa/"},{"name":"渗透测试","slug":"渗透测试","permalink":"127.0.0.1/tags/渗透测试/"},{"name":"Xss","slug":"Xss","permalink":"127.0.0.1/tags/Xss/"}]},{"title":"基于DVWA的反射型Xss测试平台high等级讲解","slug":"基于DVWA的反射型Xss测试平台high等级讲解","date":"2018-05-25T13:52:36.000Z","updated":"2018-05-25T15:09:21.628Z","comments":true,"path":"2018/05/25/基于DVWA的反射型Xss测试平台high等级讲解/","link":"","permalink":"127.0.0.1/2018/05/25/基于DVWA的反射型Xss测试平台high等级讲解/","excerpt":"这是继上节课[基于DVWA的Xss测试平台Medium等级讲解]的high等级","text":"这是继上节课[基于DVWA的Xss测试平台Medium等级讲解]的high等级 废话不多说，直接开始了~ 设置等级、查看源代码等操作不再重复了，直接把high等级的代码复制到这里:1234567891011121314&lt;?phpheader (\"X-XSS-Protection: 0\");// Is there any input?if( array_key_exists( \"name\", $_GET ) &amp;&amp; $_GET[ 'name' ] != NULL ) &#123; // Get input $name = preg_replace( '/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i', '', $_GET[ 'name' ] ); // Feedback for end user echo \"&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;\";&#125;?&gt; 最主要的看这行代码$name = preg_replace( &#39;/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i&#39;, &#39;&#39;, $_GET[ &#39;name&#39; ] );，这个是正则匹配，把(.*)里的字符统统变成&#39;&#39;；这里的i就表示这个匹配是不区分大小写的，所以上一个等级的大写绕过大法是没用了，可以说在这里基本上是在script标签里的代码都不能实现了，那么我们可以用另一种办法实现 利用其它标签执行js代码: 如何防御？这里我就不再重复了，前面两章说的十分清楚了~ 十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[{"name":"Web攻防","slug":"Web攻防","permalink":"127.0.0.1/categories/Web攻防/"}],"tags":[{"name":"代码审计","slug":"代码审计","permalink":"127.0.0.1/tags/代码审计/"},{"name":"PHP","slug":"PHP","permalink":"127.0.0.1/tags/PHP/"},{"name":"Dvwa","slug":"Dvwa","permalink":"127.0.0.1/tags/Dvwa/"},{"name":"渗透测试","slug":"渗透测试","permalink":"127.0.0.1/tags/渗透测试/"},{"name":"Xss","slug":"Xss","permalink":"127.0.0.1/tags/Xss/"}]},{"title":"CTF比赛模式","slug":"CTF比赛模式","date":"2018-05-25T08:38:38.000Z","updated":"2018-05-25T08:46:48.360Z","comments":true,"path":"2018/05/25/CTF比赛模式/","link":"","permalink":"127.0.0.1/2018/05/25/CTF比赛模式/","excerpt":"目前主要的CTF比赛模式如下","text":"目前主要的CTF比赛模式如下 一、解题模式（Jeopardy）在解题模式CTF赛制中，参赛队伍可以通过互联网或者现场网络参与比赛，比赛以解决网络安全技术挑战题目的分值和时间来排名，通常用于在线选拔赛，比赛一般会持续48小时及以上。题目类型主要包含逆向分析、漏洞挖掘与利用、移动安全、Web安全、密码、取证、隐写、编程、流量分析等等类别。 二、攻防模式（Attack-Defense）在攻防模式CTF赛制中，参赛队伍在网络空间互相进行攻击和防守，挖掘网络服务漏洞并攻击对手服务来得分，修补自身服务漏洞进行防御来避免丢分。攻防模式CTF赛制可以实时通过得分反映出比赛情况，最终也以得分直接分出胜负。这种赛制一般在线下举行，在这种赛制中，不仅仅是比拼参赛队员的智力和技术，也比拼体力（因为比赛一般都会持续48小时及以上），同时也比拼团队之间的分工配合与合作。 三、混合模式（Mix）结合了解题模式与攻防模式的CTF赛制，比如参赛队伍通过解题可以获取一些初始分数，然后通过攻防对抗进行得分增减的零和游戏，最终以得分高低分出胜负。采用混合模式CTF赛制的典型代表如iCTF国际CTF竞赛。(改自ctf（夺旗赛）) 十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[{"name":"CTF","slug":"CTF","permalink":"127.0.0.1/categories/CTF/"}],"tags":[{"name":"转载文章","slug":"转载文章","permalink":"127.0.0.1/tags/转载文章/"},{"name":"CTF","slug":"CTF","permalink":"127.0.0.1/tags/CTF/"}]},{"title":"CTF如何入门","slug":"CTF如何入门","date":"2018-05-25T08:20:03.000Z","updated":"2018-05-25T13:51:14.672Z","comments":true,"path":"2018/05/25/CTF如何入门/","link":"","permalink":"127.0.0.1/2018/05/25/CTF如何入门/","excerpt":"希望你抱着学习和提高的目的进入CTF坑，不要一味为了比赛而比赛迷失其中，勿忘初心，方能始终，与君共勉：）","text":"希望你抱着学习和提高的目的进入CTF坑，不要一味为了比赛而比赛迷失其中，勿忘初心，方能始终，与君共勉：） 题目类型 Web Crypto PWN Misc stego forensic … Reverse PPC(Professonal ProgramCoder) 国际比赛：DEFCON资格赛国内比赛：XCTF联赛 打CTF的意义 思维能力 快速学习能力 技术能力 如何入门 编程语言基础（C语言、汇编语言、大部分脚本语言） 数学基础（算法、密码学） 脑洞大开、并落地（天马行空的想象、推理解密） 体力耐力（通宵熬夜不睡觉，学习新技术、突破难关，结果不重要，过程很重要） 如何学? 恶补基础知识 从脑洞开始 从基础题出发 单、双点知识 学习信息安全专业知识 锻炼体力耐力 学之前的思考分析赛题情况 Crypto偏重对数学、算法的学习 Web偏重发散思惟、对技巧沉淀、快速搜索能力的挑战，漏洞点几类 Misc则更为复杂：隐写类、图片数据分析、数据还原、流量分析、大数据 分析自身兴趣 PWN+Re+Crypto随机搭配 Web+Misc组合 精力有限先从一两个方向做起 如何恶补知识 linux、组原、OS、网络协议分析 二进制：IDA工具使用，f5插件、OD、逆向工程、密码学、缓冲区溢出 推荐书籍 RE for Beginners(逆向工程入门。德国) IDA PRO权威指南 揭秘家用路由器0day漏洞挖掘技术 自己动手写操作系统 黑客攻防技术宝典：系统实战篇 web：网络安全、内网渗透、数据库安全、OWASPTOP10 Web应用安全权威指南。日本！！！宏观 Web前端黑客技术揭秘——总结、吃透则直线上升、核心技术点都包含 黑客秘籍-渗透测试使用指南 黑客攻防技术宝典：web实战篇 代码审计：企业级web代码安全架构 如何成为一个赛棍从基础题目出发 http://ctf.idf.cn idf实验室，非常基础，单点知识，挫败感较小 www.ichunqiu.com 线下线上题目复现 http://oj.xctf.org.cn xctf历年题目，较难 www.wechall.net/challs 非常入门的国外CTF 入门网站 国内安全大牛出发点，可首选 http://canyouhack.it 非常入门，涉及一些移动安全 http://microcorruption.com/login 很酷炫，游戏化，二进制方向 http://smashthestack.org/ war game 非常简洁的内容 ssh连入即玩 http://overthewire.org/wargames 老牌wargame,国内资料较多，WP: http://drops.wooyun.org/author/litao3rd http://exploit-exercises.com 老牌wargame，国内资料较多 http://pwnable.kr/play.php 100题左右，较基础 http://ctf.moonsos.com/pentest/index.php web安全核心技术点 http://prompt.ml/0 xss 国外测试平台,不考核对错，自己尝试 http://redtiger.labs.overthewire.org sql注入挑战赛 工具 burp、ida https://github.com/truongkma/ctf-tools https://github.com/P1kachu/v0lt https://github.com/zardus/ctf-tools https://github.com/TUCTF/Tools 以练促赛、以赛养练：都参与，不在乎名次，看多个WP，对比，重视思路，复现过程，寻找相关题目。以练促赛：选择一场已经存在WP的比赛以赛养练：参加一场最新的CTF，名次不重要，赛后要吃透，猜测作者怎么想，跟着作者想法走https://ctftime.org/ 国际比赛http://www.xctf.org.cn/ 国内比赛 组建团队:强力成员画像 思维跳跃：灵活、不钻牛角尖 专注：遇到问题不放弃直到解决 耐力：可以一昼夜不睡觉地研究技术 团队精神：责任、凝聚（相信将来总会得第一）、分享（先富带动后富） 有以上三条为强力成员，四条可为队长 组建团队要解决的问题 新人招募：如何评判新人潜力 队员培养：如何快速培养队伍能力 梯队有序：如何建立梯队层级 纪律严格：如何拒绝无团队精神的成员 坚持不懈，相信未来我们一定会成为第一的！十年寒窗无人问，一举成名天下知！ – Cai_Team","categories":[{"name":"CTF","slug":"CTF","permalink":"127.0.0.1/categories/CTF/"}],"tags":[{"name":"转载文章","slug":"转载文章","permalink":"127.0.0.1/tags/转载文章/"},{"name":"CTF","slug":"CTF","permalink":"127.0.0.1/tags/CTF/"}]},{"title":"基于DVWA的反射型Xss测试平台Medium等级讲解","slug":"基于DVWA的反射型Xss测试平台Medium等级讲解","date":"2018-05-25T02:27:24.000Z","updated":"2018-05-25T14:04:06.781Z","comments":true,"path":"2018/05/25/基于DVWA的反射型Xss测试平台Medium等级讲解/","link":"","permalink":"127.0.0.1/2018/05/25/基于DVWA的反射型Xss测试平台Medium等级讲解/","excerpt":"这是继上节课[基于DVWA的Xss测试平台Low等级讲解]的中等级","text":"这是继上节课[基于DVWA的Xss测试平台Low等级讲解]的中等级 首先，我们把等级设置为Medium 上节课讲了如何设置这里就不再讲了 查看Medium源代码: 点开后是这样的： 代码：1234567891011121314&lt;?phpheader (\"X-XSS-Protection: 0\");// Is there any input?if( array_key_exists( \"name\", $_GET ) &amp;&amp; $_GET[ 'name' ] != NULL ) &#123; // Get input $name = str_replace( '&lt;script&gt;', '', $_GET[ 'name' ] ); // Feedback for end user echo \"&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;\";&#125;?&gt; 这里的代码部分也很好理解，比上一章仅仅多了一个过滤，下面来详细讲解一下。 if( array_key_exists( &quot;name&quot;, $_GET ) &amp;&amp; $_GET[ &#39;name&#39; ] != NULL )这段代码的意思是，如果$_GET中有name这个key并且$_GET[ &#39;name&#39; ]的值不为空的话就执行{}里面的代码。$name = str_replace( &#39;&lt;script&gt;&#39;, &#39;&#39;, $_GET[ &#39;name&#39; ] );这句话的意思是把$_GET[&#39; name &#39;]中的&lt;script&gt;过滤为空( 并不安全 ),最后一段代码就是输出Hello+name的值在页面上 看懂代码后，如何利用呢?我们在上面看代码的时候明白了，在这个Medium等级中，只做了把&lt;script&gt;字符给过滤了，那么我下面就来演示一下如何绕过 先来输入&lt;script&gt;后看看是否为空:可以看到这里的输出是为空的，下面来讲绕过 绕过方法1：在输入框中输入&lt;scr&lt;script&gt;ipt&gt;alert(&#39;iamfree&#39;)&lt;/script&gt;，来看看结果先: 解释: 绕过方法2:用大写的绕过,输入&lt;SCRIPT&gt;alert(&#39;iamfree&#39;)&lt;/SCRIPT&gt; 如何防御防御方法1:其实防御的方法也和上篇一样，但还有一个也很棒的方法哟。 代码:1234567891011121314151617&lt;?phpheader (\"X-XSS-Protection: 0\");// Is there any input?if( array_key_exists( \"name\", $_GET ) &amp;&amp; $_GET[ 'name' ] != NULL ) &#123; // Get input // $name = str_replace( '&lt;script&gt;', 'xss', $_GET[ 'name' ] ); foreach ( $_GET as $key =&gt; $value ) &#123; //把$_GET数组里的值分成$key和$value $name = $_GET[ $key ] = htmlspecialchars( $value ); //把$_GET数组中$key对应的$value值html实例化，并且赋值给$name变量 &#125; // Feedback for end user $html .= \"&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;\";&#125;?&gt; 防御方法2： 只需要加上一条preg_replace( &#39;/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i&#39;, &#39;&#39;, $_GET[ &#39;name&#39; ] )，这也是high等级的防御方法 十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[{"name":"Web攻防","slug":"Web攻防","permalink":"127.0.0.1/categories/Web攻防/"}],"tags":[{"name":"代码审计","slug":"代码审计","permalink":"127.0.0.1/tags/代码审计/"},{"name":"PHP","slug":"PHP","permalink":"127.0.0.1/tags/PHP/"},{"name":"Dvwa","slug":"Dvwa","permalink":"127.0.0.1/tags/Dvwa/"},{"name":"渗透测试","slug":"渗透测试","permalink":"127.0.0.1/tags/渗透测试/"},{"name":"Xss","slug":"Xss","permalink":"127.0.0.1/tags/Xss/"}]},{"title":"简单的用户管理分析","slug":"简单的用户管理分析","date":"2018-05-24T13:14:59.000Z","updated":"2018-05-25T07:12:31.269Z","comments":true,"path":"2018/05/24/简单的用户管理分析/","link":"","permalink":"127.0.0.1/2018/05/24/简单的用户管理分析/","excerpt":"项目介绍这是笔者从GITHUB上找的简单PHP程序( 一个可 增删查 的用户数据管理 )","text":"项目介绍这是笔者从GITHUB上找的简单PHP程序( 一个可 增删查 的用户数据管理 ) 数据库连接代码:先介绍一下数据库的表结构： 123456&lt;?php $pdo = new PDO('mysql:host=localhost;dbname=data','root','root'); //PDO(PHP访问数据库定义了一个轻量级的、一致性的接口，它提供了一个数据访问抽象层，这样，无论使用什么数据库，都可以通过一致的函数执行查询和获取数据，比如mysql有limit，MSSQL没有limit，pdo会自动转换) $pdo-&gt;exec('set names utf8'); //设置编码 $pdo-&gt;setAttribute(PDO::ATTR_DEFAULT_FETCH_MODE,PDO::FETCH_ASSOC); //设置默认结果集模式为关联数组 $pdo-&gt;setAttribute(PDO::ATTR_ERRMODE,PDO::ERRMODE_EXCEPTION); //修改报错模式?&gt; 其中的PDO是:PDO(PHP访问数据库定义了一个轻量级的、一致性的接口，它提供了一个数据访问抽象层，这样，无论使用什么数据库，都可以通过一致的函数执行查询和获取数据，比如mysql有limit，MSSQL没有limit，pdo会自动转换) PDO好处： 更换数据库时取得极大便利(从A数据库换成其他数据库可以不需要修改查询的代码，因为PDO帮我实现了) 更换数据库时取得极大便利 首页代码：12345678910111213141516171819202122232425&lt;?php include 'config.inc.php'; //包含连接数据库的代码 $len = 10; //每页展现10条数据 $page = !empty($_GET[\"page\"]) ? $_GET[\"page\"] : 1;//三元表达式，表示如果$_GET['page']为空时，默认值为1 $sqlTotal = \"select count(Id) from t1\"; // SQL语句。意思是查询t1表中的Id字段个数 $smtTotal = $pdo-&gt;prepare($sqlTotal); //准备要执行的SQL语句并返回一个 PDOStatement 对象(PHP 5 &gt;= 5.1.0, PECL pdo &gt;= 0.1.0) echo \"&lt;strong&gt;\\$sqlTotal:&lt;/strong&gt;\"; print_r($smtTotal); echo \"&lt;br /&gt;\"; echo \"&lt;strong&gt;execute():&lt;/strong&gt;\"; print_r($smtTotal-&gt;execute()); $tot = $smtTotal-&gt;fetchColumn(); //总记录数 echo \"&lt;br /&gt;\"; echo \"&lt;strong&gt;\\$tot:&lt;/strong&gt;\"; print_r($tot); echo \"&lt;br /&gt;\"; $pages = ceil($tot/$len); //总页数 echo \"&lt;strong&gt;\\$pages:&lt;/strong&gt;\"; print_r($pages); ... ...(省略，先讲解一下这段代码的用法) 可以看看我写的PDO的文章(别夸我，谁让我是爱学习的好孩子) 首页的代码我统统写了注释： 更改用户数据代码：12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152&lt;?php/* 思路:先获取对应的数据，然后返回到输入框，如果我们选择提交，表单就会发送的数据就会更改到数据库里，实现更改内容*/ include 'config.inc.php';$Id = $_GET[\"Id\"]; //获取GET请求过来的Id值$sql = \"select * from t1 where Id=?\"; //SQL语句的查询$smt = $pdo-&gt;prepare($sql); //给SQL语句做标记$smt-&gt;bindValue(1,$Id); //想成是给上面的?改成$Id变量的值$smt-&gt;execute(); //执行SQL语句$row = $smt-&gt;fetch(); //接收SQL语句查询到的结果?&gt;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;update&lt;/title&gt; &lt;meta charset=\"utf-8\"&gt;&lt;/head&gt;&lt;script type=\"text/javascript\" src=\"bower_components/jquery/dist/jquery.min.js\"&gt;&lt;/script&gt;&lt;script type=\"text/javascript\" src=\"bower_components/bootstrap/dist/js/bootstrap.min.js\"&gt;&lt;/script&gt;&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"bower_components/bootstrap/dist/css/bootstrap.min.css\"&gt;&lt;body&gt;&lt;div class=\"container\"&gt; &lt;h1 class=\"page-header\"&gt; &lt;a href=\"index.php\" class=\"btn btn-warning\"&gt;查看用户&lt;/a&gt; &lt;a href=\"\" class=\"btn btn-primary\"&gt;修改用户&lt;/a&gt; &lt;/h1&gt; &lt;form action=\"act.php?act=update&amp;Id=&lt;?php echo $Id;?&gt;\" method=\"post\"&gt; &lt;!-- act页面实现的修改功能，这里只需要传入要修改的Id值就可以更改此Id中对应的数据 --&gt; &lt;div class=\"form-group\"&gt; &lt;label&gt;新用户名:&lt;/label&gt; &lt;input type=\"text\" class=\"form-control\" name=\"Name\" value=&lt;?php echo \"&#123;$row['Name']&#125;\";//把查询到的数据的Name返回到输入框中，这样子我们就可以实现修改功能 ?&gt; &gt; &lt;/div&gt; &lt;div class=\"form-group\"&gt; &lt;label&gt;新密码:&lt;/label&gt; &lt;input type=\"text\" class=\"form-control\" name=\"Pwd\" value= &lt;?php echo \"&#123;$row['Pwd']&#125;\"; //同上?&gt; &gt; &lt;/div&gt; &lt;div class=\"form-group\"&gt; &lt;input type=\"submit\" class=\"btn btn-primary\"&gt; &lt;input type=\"reset\" class=\"btn btn-danger\"&gt; &lt;/div&gt; &lt;/form&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 插入数据代码：1234567891011121314151617181920212223242526272829303132&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;add&lt;/title&gt; &lt;meta charset=\"utf-8\"&gt;&lt;/head&gt;&lt;script type=\"text/javascript\" src=\"bower_components/jquery/dist/jquery.min.js\"&gt;&lt;/script&gt;&lt;script type=\"text/javascript\" src=\"bower_components/bootstrap/dist/js/bootstrap.min.js\"&gt;&lt;/script&gt;&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"bower_components/bootstrap/dist/css/bootstrap.min.css\"&gt;&lt;body&gt; &lt;div class=\"container\"&gt; &lt;h1 class=\"page-header\"&gt; &lt;a href=\"index.php\" class=\"btn btn-warning\"&gt;查看用户&lt;/a&gt; &lt;a href=\"\" class=\"btn btn-primary\"&gt;添加用户&lt;/a&gt; &lt;/h1&gt; &lt;form action=\"act.php?act=insert\" method=\"post\"&gt; &lt;!-- act.php页面实现了插入功能，所以这里我们只需要把内容提交到act.php就可以完成插入内容 --&gt; &lt;div class=\"form-group\"&gt; &lt;label&gt;用户名:&lt;/label&gt; &lt;input type=\"text\" class=\"form-control\" name=\"Name\"&gt; &lt;/div&gt; &lt;div class=\"form-group\"&gt; &lt;label&gt;密码:&lt;/label&gt; &lt;input type=\"text\" class=\"form-control\" name=\"Pwd\"&gt; &lt;/div&gt; &lt;div class=\"form-group\"&gt; &lt;input type=\"submit\" class=\"btn btn-primary\"&gt; &lt;input type=\"reset\" class=\"btn btn-danger\"&gt; &lt;/div&gt; &lt;/form&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 删除功能代码:删除页面代码也在首页(index.php)里实现的一般我们删除操作是需要十分谨慎的，因为数据一旦删除是无法恢复的，那么如果用户不小心点到了按钮，我们就应该提醒他是否要删除。 可以看到这里有一个class是delete，然后看到下面有一段提醒是否执行删除的JS代码： 最后我们看看act.php的代码：1234567891011121314151617181920212223242526272829303132333435363738&lt;?php include 'config.inc.php'; //包含PDO链接数据库代码 $act = $_GET[\"act\"]; //获取GET请求过来的act值，来实现增、删、改。 if($act == 'delete')&#123; //如果是选择删除 $Id = $_GET[\"Id\"]; //获取GET请求过来的ID $sql = \"delete from t1 where Id=?\"; //这是SQL语句的删除 $smt = $pdo-&gt;prepare($sql); //给SQL语句做标记 $smt-&gt;bindValue(1,$Id); //绑定一个值到用作预处理的 SQL 语句中的对应命名占位符或问号占位符 if($smt-&gt;execute())&#123; //判断是否执行成功，如果执行成功返回的是1 echo \"&lt;script&gt;location='index.php'&lt;/script&gt;\"; //执行成功就跳转到首页(index.php) &#125; &#125; if($act == 'insert')&#123; //如果是选择插入 $Name = $_POST[\"Name\"]; //获取POST请求的Name值 $Pwd = $_POST[\"Pwd\"]; //获取POST请求的Pwd值 $sql = \"insert into t1(Name,Pwd) values('&#123;$Name&#125;','&#123;$Pwd&#125;')\"; //这是SQL语句的插入 $smt = $pdo-&gt;prepare($sql); //给SQL语句做标记 if($smt-&gt;execute())&#123; //判断是否执行成功 echo \"&lt;script&gt;location='index.php'&lt;/script&gt;\"; //执行成功就跳转到首页(index.php) &#125;&#125; /*如果act=update和id=x，那么就执行修改的SQL语句，修改条件(where)是Id=x*/ if($act == 'update')&#123; //如果是更改 $Id = $_GET[\"Id\"]; //获取GET请求的Id值 $Name = $_POST[\"Name\"]; //获取POST的Name值 $Pwd = $_POST[\"Pwd\"]; //获取POST请求的Pwd值 $sql = \"update t1 set Name='&#123;$Name&#125;',Pwd='&#123;$Pwd&#125;' where Id=&#123;$Id&#125;\"; //这是SQL语句的更改 $smt = $pdo-&gt;prepare($sql); //给SQL语句做标记 if($smt-&gt;execute())&#123; //判断是否执行成功 echo \"&lt;script&gt;location='index.php'&lt;/script&gt;\"; //如果执行成功就跳转到首页(index.php) &#125; &#125; ?&gt; 十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[{"name":"编程","slug":"编程","permalink":"127.0.0.1/categories/编程/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"127.0.0.1/tags/PHP/"}]},{"title":"基于DVWA的反射型Xss测试平台Low等级讲解","slug":"基于DVWA的Xss测试平台Low等级讲解","date":"2018-05-24T09:34:46.000Z","updated":"2018-05-25T14:04:38.221Z","comments":true,"path":"2018/05/24/基于DVWA的Xss测试平台Low等级讲解/","link":"","permalink":"127.0.0.1/2018/05/24/基于DVWA的Xss测试平台Low等级讲解/","excerpt":"Dvwa是一个网站渗透测试演练平台，里面包括了Xss攻击,Sql注入攻击，Csrf漏洞、文件上传漏洞、命令注入漏洞等，而且每个漏洞都分为Low(低等级)、Medium( 中等级 )、High( 高等级 )、Impossible( 没漏洞等级 )","text":"Dvwa是一个网站渗透测试演练平台，里面包括了Xss攻击,Sql注入攻击，Csrf漏洞、文件上传漏洞、命令注入漏洞等，而且每个漏洞都分为Low(低等级)、Medium( 中等级 )、High( 高等级 )、Impossible( 没漏洞等级 ) 下载过程和安装过程网上可以找到我就不讲解了。 首先将Dvwa等级设置成Low: 开始Xss漏洞讲解Xss反射型：当输入hello在输入框点击Submit后，会输出一个Hello iamfree，那么我们来看看这是如何实现的 实现的代码：因为这是Low级别的，所以我们可以清楚的看见这里没有做任何过滤，我们只需要输入一串而已的Js代码就可以实现盗取别人Cookie，做钓鱼之类的功能，下面我来简单的演示一下~ 输入&lt;img src=x onerror=alert(&#39;iamfree&#39;)&gt;后，Url变成http://127.0.0.1/dvwa/vulnerabilities/xss_r/?name=%3Cimg+src%3Dx+onerror%3Dalert%28%27iamfree%27%29%3E#，效果: &lt;img src=x onerror=alert(&#39;iamfree&#39;)&gt;的src表示img图片的地址，可以是本地也可以是Url形式;onerror的意思是如果图片没有正常显示的话就会执行=后面的代码，因为这里src=x而x是不存在的，所以无法显示，就会报错了~ 如何防御这里的话防御很简单的，只需要一个函数即可： 防御代码:12345678910111213&lt;?phpheader (\"X-XSS-Protection: 0\");// Is there any input?if( array_key_exists( \"name\", $_GET ) &amp;&amp; $_GET[ 'name' ] != NULL ) &#123; // Feedback for end user // 防御的反射Xss $name = htmlspecialchars($_GET['name']); $html .= '&lt;pre&gt;Hello ' . $name . '&lt;/pre&gt;';&#125;?&gt; 继续访问刚才的Url(http://127.0.0.1/dvwa/vulnerabilities/xss_r/?name=%3Cimg+src%3Dx+onerror%3Dalert%28%27iamfree%27%29%3E#)，看看是否有效:成功的防止了Xss反射型攻击了~ htmlspecialchars函数的官方解释: 十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[{"name":"Web攻防","slug":"Web攻防","permalink":"127.0.0.1/categories/Web攻防/"}],"tags":[{"name":"代码审计","slug":"代码审计","permalink":"127.0.0.1/tags/代码审计/"},{"name":"PHP","slug":"PHP","permalink":"127.0.0.1/tags/PHP/"},{"name":"Dvwa","slug":"Dvwa","permalink":"127.0.0.1/tags/Dvwa/"},{"name":"渗透测试","slug":"渗透测试","permalink":"127.0.0.1/tags/渗透测试/"},{"name":"Xss","slug":"Xss","permalink":"127.0.0.1/tags/Xss/"}]},{"title":"某CTF赛的一处代码简单讲解","slug":"某CTF赛的一处代码简单讲解","date":"2018-05-24T08:07:33.000Z","updated":"2018-05-25T07:48:24.524Z","comments":true,"path":"2018/05/24/某CTF赛的一处代码简单讲解/","link":"","permalink":"127.0.0.1/2018/05/24/某CTF赛的一处代码简单讲解/","excerpt":"此篇文章只是给里面的代码处做一下详细的讲解~原文地址:loudong.360.cn/School/content/id/285","text":"此篇文章只是给里面的代码处做一下详细的讲解~原文地址:loudong.360.cn/School/content/id/285 CTF线下赛中一处代码( 红色区域处 )，现在就是来讲解这个的~ 讲解开始:首先看一下我写的这个代码:123456789101112131415function e( $str )&#123; if ( is_array( $str ) )&#123; //如果是列表~ echo \"&lt;pre&gt;\"; var_dump( $str ); &#125;else &#123; echo $str ; &#125;&#125;$mylist = [ 'ctrl' =&gt; ( !empty($_GET['p']) ? $_GET['p'] : 'blog' ) , //ctrl的value值：如果get请求的p值不为空，那么就返回get请求的p值，否者返回blog 'template' =&gt; ( !empty($_GET['t']) ? $_GET['t'] : 'pc' ) //template的value值：如果get请求的t值不为空，那么就返回get请求的t值，否者返回pc\\];e( $mylist ); 这里的!empty($_GET[&#39;p&#39;]) ? $_GET[&#39;p&#39;] : &#39;blog&#39;是三元表达式，详细用法我也在代码处讲解过了 实验一下代码功能：如果没有添加任何值的话，默认的就是ctrl的值为blog,template的值为pc 我们传递一下GET请求的p值和GET请求的t值: 如果你们觉得这篇文章有点水的话… 那也确实是，哈哈哈(太基础)，但是我只是想来做一篇文章来摆设摆设~ 十年寒窗无人问，一举成名天下知 – Cai_Team","categories":[{"name":"Web攻防","slug":"Web攻防","permalink":"127.0.0.1/categories/Web攻防/"}],"tags":[{"name":"CTF","slug":"CTF","permalink":"127.0.0.1/tags/CTF/"},{"name":"代码审计","slug":"代码审计","permalink":"127.0.0.1/tags/代码审计/"},{"name":"PHP","slug":"PHP","permalink":"127.0.0.1/tags/PHP/"}]}]}